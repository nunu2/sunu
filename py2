# -*- ‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ -*-
from linepy import *
from akad.ttypes import *
from multiprocessing import Pool, Process
from time import sleep
from datetime import datetime
from bs4 import BeautifulSoup
from humanfriendly import format_timespan, format_size, format_number, format_length
#import time, random, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six, ast, pytz, urllib.request, urllib.parse, urllib.error, urllib.parse,base64,antolib,subprocess,unicodedata,GACSender
import time, random, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six, ast, pytz, urllib, urllib.parse
from gtts import gTTS
import html5lib,shutil
import wikipedia,goslate
import youtube_dl, pafy, asyncio
from multiprocessing import Pool, Process
from googletrans import Translator

#==============================================================================#
botStart = time.time()
#==============================================================================#
#line = LINE()
#line = LINE("‡πÄ‡∏°‡∏•","‡∏û‡∏≤‡∏™")
line = LINE('sunu0734@gmail.com','sunu2018')
line.log("Auth Token : " + str(line.authToken))
line.log("Timeline Token : " + str(line.tl.channelAccessToken))


ki1 = LINE('nunu4844@gmail.com','sunu2018')
ki1.log("Auth Token : " + str(ki1.authToken))
ki1.log("Timeline Token : " + str(ki1.tl.channelAccessToken))

ki2 = LINE('su3nu2018@gmail.com','sunu2018')
ki2.log("Auth Token : " + str(ki2.authToken))
ki2.log("Timeline Token : " + str(ki2.tl.channelAccessToken))

ki3 = LINE('su2nu2018@gmail.com','sunu2018')
ki3.log("Auth Token : " + str(ki3.authToken))
ki3.log("Timeline Token : " + str(ki3.tl.channelAccessToken))

ki4 = LINE('su6nu2018@gmail.com','sunu2018')
ki4.log("Auth Token : " + str(ki4.authToken))
ki4.log("Timeline Token : " + str(ki4.tl.channelAccessToken))


ki5 = LINE('su15nu2018@gmail.com','sunu2018')
ki5.log("Auth Token : " + str(ki5.authToken))
ki5.log("Timeline Token : " + str(ki5.tl.channelAccessToken))

ki6 = LINE('su5nu2018@gmail.com','sunu2018')
ki6.log("Auth Token : " + str(ki6.authToken))
ki6.log("Timeline Token : " + str(ki6.tl.channelAccessToken))

ki7 = LINE('su12nu2p18@gmail.com','sunu2018')
ki7.log("Auth Token : " + str(ki7.authToken))
ki7.log("Timeline Token : " + str(ki7.tl.channelAccessToken))

ki8 = LINE('nu6bot2018@gmail.com','sunu2018')
ki8.log("Auth Token : " + str(ki8.authToken))
ki8.log("Timeline Token : " + str(ki8.tl.channelAccessToken))


ki9 = LINE('su4nu2018@gmail.com','sunu2018')
ki9.log("Auth Token : " + str(ki9.authToken))
ki9.log("Timeline Token : " + str(ki9.tl.channelAccessToken))


ki10 = LINE('su7nu2018@gmail.com','sunu2018')
ki10.log("Auth Token : " + str(ki10.authToken))
ki10.log("Timeline Token : " + str(ki10.tl.channelAccessToken))


print ("Login Succes")

lineMID = line.profile.mid
lineProfile = line.getProfile()
lineSettings = line.getSettings()

ki1MID = ki1.profile.mid
ki1Profile = ki1.getProfile()
ki1Settings = ki1.getSettings()

ki2MID = ki2.profile.mid
ki2Profile = ki2.getProfile()
ki2Settings = ki2.getSettings()

ki3MID = ki3.profile.mid
ki3Profile = ki3.getProfile()
ki3Settings = ki3.getSettings()

ki4MID = ki4.profile.mid
ki4Profile = ki4.getProfile()
ki4Settings = ki4.getSettings()

ki5MID = ki5.profile.mid
ki5Profile = ki5.getProfile()
ki5Settings = ki5.getSettings()

ki6MID = ki6.profile.mid
ki6Profile = ki6.getProfile()
ki6Settings = ki6.getSettings()

ki7MID = ki7.profile.mid
ki7Profile = ki7.getProfile()
ki7Settings = ki7.getSettings()

ki8MID = ki8.profile.mid
ki8Profile = ki8.getProfile()
ki8Settings = ki8.getSettings()

ki9MID = ki9.profile.mid
ki9Profile = ki9.getProfile()
ki9Settings = ki9.getSettings()

ki10MID = ki10.profile.mid
ki10Profile = ki10.getProfile()
ki10Settings = ki10.getSettings()

oepoll = OEPoll(ki10)
oepoll = OEPoll(ki9)
oepoll = OEPoll(ki8)
oepoll = OEPoll(ki7)
oepoll = OEPoll(ki6)
oepoll = OEPoll(ki5)
oepoll = OEPoll(ki4)
oepoll = OEPoll(ki3)
oepoll = OEPoll(ki2)
oepoll = OEPoll(ki1)
oepoll = OEPoll(line)
readOpen = codecs.open("read.json","r","utf-8")
settingsOpen = codecs.open("temp.json","r","utf-8")
read = json.load(readOpen)
settings = json.load(settingsOpen)
Rfu = [line,ki1,ki2,ki3,ki4,ki5,ki6,ki7,ki8,ki9,ki10]
Exc = [ki1,ki2,ki3,ki4,ki5,ki6,ki7,ki8,ki9,ki10]
lineMID = line.getProfile().mid
kiMID = ki1.getProfile().mid
kkMID = ki2.getProfile().mid
kcMID = ki3.getProfile().mid
kcMID = ki4.getProfile().mid
kiMID = ki5.getProfile().mid
kkMID = ki6.getProfile().mid
kcMID = ki7.getProfile().mid
kcMID = ki8.getProfile().mid
kiMID = ki9.getProfile().mid
kkMID = ki10.getProfile().mid
bot1 = line.getProfile().mid
RfuBot=[lineMID,ki1MID,ki2MID,ki3MID,ki4MID,ki5MID,ki6MID,ki7MID,ki8MID,ki9MID,ki10MID]
Family=["ud3a6bfda60a956cca0f58f2a14bae808",lineMID,ki1MID,ki2MID,ki3MID,ki4MID,ki5MID,ki6MID,ki7MID,ki8MID,ki9MID,ki10MID,]
admin=['ud3a6bfda60a956cca0f58f2a14bae808',lineMID]
RfuFamily = RfuBot + Family

protectname = []
protecturl = []
protection = []
autocancel = {}
autoinvite = []
autoleaveroom = []
targets = []
#~~~~~~~~~~~~~~~~~~[‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ]~~~~~~~~~~~~~~~~#
settings = {
    "autoAdd": True,
    "autoJoin": False,
    'autoCancel':{"on":True,"members":5},	
    "autoLeave": False,
    "autoRead": False,
    "leaveRoom": False,
    "detectMention": True,
    "checkSticker": False,
    "contact": False,
    "kiebot": True, 
    "potoMention": True,
    "lang":"JP",
    "Wc": False,
    "Lv": False,
    "KIEBOT1":"\n[‡πÄ‡∏Æ‡πÇ‡∏´‡∏•‡πÜ‡πÜ‡πÜ üòö‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏Å‡πâ‡∏ú‡πâ‡∏≤‡∏ô‡πà‡∏∞‡πÄ‡πÄ‡∏à‡πä‡∏∞ ‡πÑ‡∏´‡∏ô‡πÜ‡πÄ‡∏≠‡∏≤ ‡∏´‡∏≥‡∏Å‡∏∞‡∏´‡∏≠‡∏¢‡∏°‡∏≤‡πÄ‡∏ö‡∏¥‡πà‡∏á‡∏ï‡∏¥‡πà‡∏•‡∏∞ ‚ù£ ]",
    "KIEBOT2":"\n[‡πÄ‡∏≠‡πâ‡∏≤ ! ‡πÑ‡∏õ‡∏•‡∏∞‡∏ï‡∏¥‡πà ‡∏ö‡∏±‡∏Å‡∏õ‡∏≠‡∏ö ‡∏ö‡πä‡∏≤‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢ üñë]",
    "tag1":"\n[‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏≥‡∏°‡∏±‡∏¢ !!‡∏ô‡∏±‡∏î‡πÄ‡∏¢‡∏™‡πÄ‡∏•‡∏¢‡∏°‡∏±‡πâ‡∏¢‡πÄ‡∏ï‡∏á ^^ ‡πÇ‡∏ß‡πÇ‡∏ß‡πÄ‡∏¢‡πÄ‡∏¢ üòõ]",
    "tag2":"\n[‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏≥‡∏°‡∏±‡∏¢ ? ‡∏ô‡∏±‡∏î‡πÄ‡∏¢‡∏™‡πÄ‡∏•‡∏¢‡∏°‡∏±‡πâ‡∏¢‡πÄ‡∏ï‡∏á ^^ ‡πÇ‡∏ß‡πÇ‡∏ß‡πÄ‡∏¢‡πÄ‡∏¢ üòõ]",
    "blacklist":{},
    "winvite": False,
    "wblacklist": False,
    "dblacklist": False,
    "commentBlack":{},
    "wblack": False,
    "dblack": False,
    "clock": True,
    "cName":"",
    "cNames":"",
    "invite": {},
    "winvite": False,
    "pnharfbot": {},
    "pname": {},
    "pro_name": {},
    "message":"‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ/n‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏¥‡∏à‡∏≤‡∏Å ‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å’É‡∏¥€û‚Ä¢‚îÄ /n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏≤ (‚ó°‚Äø‚ó°‚úø)\n ‚Ä¢*¬¥¬®`*‚Ä¢.¬∏¬∏.‚Ä¢*¬¥¬®`*‚Ä¢.¬∏¬∏.‚Ä¢*¬¥¬®`*‚Ä¢.¬∏¬∏.‚Ä¢*¬¥¬®`*‚Ä¢.¬∏¬∏.‚Ä¢\n::: (\_(\ ‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶::::::::::::::\n*: (=‚Äô :‚Äô) :: ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ  ‡∏ô‡∏∞‡∏à‡πä‡∏∞! :::::::::::::::::::::\n‚Ä¢.. (,(‚Äù)(‚Äù)¬§‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶*‚Ä¶:::::::::::\n¬∏.‚Ä¢*¬¥¬®`*‚Ä¢.¬∏¬∏.‚Ä¢*¬¥¬®`*‚Ä¢.¬∏¬∏.‚Ä¢*¬¥¬®`*‚Ä¢.¬∏¬∏.‚Ä¢*¬¥¬®`*‚Ä¢.¬∏",
    "comment":"(‚ó°‚Äø‚ó°‚úø)@ID.LINE [http://line.me/ti/p/p2nGSe0XoX] ",
    "userAgent": [
        "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; U; Linux amd64; rv:5.0) Gecko/20100101 Firefox/5.0 (Debian)",
        "Mozilla/5.0 (X11; U; Linux amd64; en-US; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 FirePHP/0.5",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux ppc; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux AMD64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1.1; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; U; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; rv:5.0) Gecko/20100101 Firefox/5.0"
    ],
    "mimic": {
        "copy": False,
        "status": False,
        "target": {}
    }
}

RfuProtect = {
    "protect": True,
    "cancelprotect": False,
    "inviteprotect": False,
    "linkprotect": False,
    "Protectguest": False,
    "Protectjoin": False,
    "autoAdd": True,
}

Setmain = {
    "foto": {},
}

read = {
    "readPoint": {},
    "readMember": {},
    "readTime": {},
    "ROM": {}
}

myProfile = {
	"displayName": "",
	"statusMessage": "",
	"pictureStatus": ""
}

mimic = {
    "copy":False,
    "copy2":False,
    "status":False,
    "target":{}
    }
    
RfuCctv={
    "cyduk":{},
    "point":{},
    "sidermem":{}
}

rfuSet = {
    'setTime':{},
    'ricoinvite':{},
    }

user1 = lineMID
user2 = ""
	
setTime = {}
setTime = rfuSet['setTime']

contact = line.getProfile() 
backup = line.getProfile() 
backup.dispalyName = contact.displayName 
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus

mulai = time.time() 
dangerMessage = ["cleanse","group cleansed.","mulai",".winebot",".kickall","mayhem","kick on","makasih :d","!kickall","nuke","‡∏ö‡∏¥‡∏ô","‡πÄ‡∏ï‡∏∞","‡∏≠‡∏µ‡∏ä‡∏¥","‡∏≠‡∏¥‡∏ä‡∏¥"]

myProfile["displayName"] = lineProfile.displayName
myProfile["statusMessage"] = lineProfile.statusMessage
myProfile["pictureStatus"] = lineProfile.pictureStatus
#==============================================================================#
#==============================================================================#
def Rapid1Say(mtosay):
    line.sendText(Rapid1To,mtosay)

def summon(to, nama):
    aa = ""
    bb = ""
    strt = int(14)
    akh = int(14)
    nm = nama
    for mm in nm:
      akh = akh + 2
      aa += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps(mm)+"},"""
      strt = strt + 6
      akh = akh + 4
      bb += "\xe2\x95\xa0 @x \n"
    aa = (aa[:int(len(aa)-1)])
    msg = Message()
    msg.to = to
    msg.text = "\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\n"+bb+"\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90"
    msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+aa+']}','EMTVER':'4'}
    print ("TAG ALL")
    try:
       line.sendMessage(msg)
    except Exception as error:
       print(error)

def restartBot():
    print ("RESTART SERVER")
    time.sleep(3)
    python = sys.executable
    os.execl(python, python, *sys.argv)
    
def logError(text):
    line.log("[ ‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ ] " + str(text))
    time_ = datetime.now()
    with open("errorLog.txt","a") as error:
        error.write("\n[%s] %s" % (str(time), text))

def sendMessage(to, text, contentMetadata={}, contentType=0):
    mes = Message()
    mes.to, mes.from_ = to, profile.mid
    mes.text = text
    mes.contentType, mes.contentMetadata = contentType, contentMetadata
    if to not in messageReq:
        messageReq[to] = -1
    messageReq[to] += 1
        
def sendMessageWithMention(to, lineMID):
    try:
        aa = '{"S":"0","E":"3","M":'+json.dumps(lineMID)+'}'
        text_ = '@x '
        line.sendMessage(to, text_, contentMetadata={'MENTION':'{"MENTIONEES":['+aa+']}'}, contentType=0)
    except Exception as error:
        logError(error)
 
def myhelp():
    myHelp = "‚ú∞„Äå  SELFBOT üå∏‚Ñì‡∫´‡∫º‡∏µ‡πâ‡§õ’É‡∏¥üå∏  „Äç‚ú∞   " + "\n" \
                  "üç≠„Äå‡∏ö‡∏±‡∏ç‡∏ä‡∏µ„Äç" + "\n" + \
                  "üç≠„Äå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á1-5„Äç‡∏ß‡∏¥‡∏ó‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏°‡∏µ5‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á" + "\n" + \
                  "üç≠„ÄåLanguange„Äç" + "\n" + \
                  "üç≠„Äå‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á„Äç[‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏≠‡∏ó]" + "\n" + \
                  "üç≠„Äå‡∏Ñ‡∏ó„Äç[‡∏Ñ‡∏ó‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á]" + "\n" + \
                  "üç≠„Äå‡∏°‡∏¥‡∏™„Äç[MID‡πÄ‡∏£‡∏≤]" + "\n" + \
                  "üç≠„Äå‡∏ä‡∏∑‡πà‡∏≠„Äç[‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤]" + "\n" + \
                  "üç≠„Äå‡∏ï‡∏±‡∏™„Äç[‡∏ï‡∏±‡∏™‡πÄ‡∏£‡∏≤]" + "\n" + \
                  "üç≠„Äå‡∏î‡∏¥‡∏™„Äç[‡∏î‡∏¥‡∏™‡πÄ‡∏£‡∏≤]" + "\n" + \
                  "üç≠„Äå‡∏õ‡∏Å„Äç[‡∏õ‡∏Å‡πÄ‡∏£‡∏≤]" + "\n" + \
                  "üç≠„Äå‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠„Äç[‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠‡πÄ‡∏£‡∏≤]" + "\n" + \
                  "üç≠„Äå‡∏°‡∏¥‡∏™ @„Äç[MID‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô]" + "\n" + \
                  "üç≠„Äå‡∏ä‡∏∑‡πà‡∏≠ @„Äç[‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô]" + "\n" + \
                  "üç≠„Äå‡∏ï‡∏±‡∏™ @„Äç[‡∏ï‡∏±‡∏™‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô]" + "\n" + \
                  "üç≠„Äå‡∏î‡∏¥‡∏™ @„Äç[‡∏î‡∏¥‡∏™‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô]" + "\n" + \
                  "üç≠„Äå‡∏õ‡∏Å @„Äç[‡∏õ‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô]" + "\n" + \
                  "üç≠„Äå‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ @„Äç[‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô]" + "\n" + \
                  "üç≠„ÄåCopy„Äç" + "\n" + \
                  "üç≠„ÄåRestore„Äç" + "\n" + \
                  "üç≠„ÄåMimic on/off„Äç" + "\n" + \
                  "üç≠„ÄåMimicList„Äç" + "\n" + \
                  "üç≠„ÄåMimicAdd„Äç" + "\n" + \
                  "üç≠„ÄåMimicDel„Äç" + "\n" + \
                  "üç≠„ÄåBroadcastvoice„Äç" + "\n" + \
                  "üç≠„ÄåCbroadcastvoice„Äç" + "\n" + \
                  "üç≠„ÄåTag1„Äç" + "\n"\
                  "üç≠„ÄåTag2„Äç" + "\n"\
                  "üç≠„Äåspeed„Äç[‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡∏ö‡∏≠‡∏ó]" + "\n"\
                  "üç≠„Äåsp„Äç[‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡∏ö‡∏≠‡∏ó]" + "\n"\
                  "üç≠„Äå‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô„Äç[‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ô‡πÑ‡∏™‡πà‡∏Å‡∏±‡∏ô‡πÅ‡∏ó‡∏Ñ]" + "\n"\
                  "üç≠„Äå‡∏à‡∏±‡∏î @„Äç[‡πÄ‡∏ï‡∏∞‡πÇ‡∏î‡∏¢‡πÅ‡∏≠‡∏î‡∏ä‡∏∑‡πà‡∏≠]" + "\n"\
                  "üç≠„Äå‡∏£‡∏µ‡∏ö‡∏≠‡∏ó„Äç" + "\n" + \
                  "üç≠„Äå‡∏≠‡∏≠‡∏ô„Äç" + "\n" + \
                  "üç≠„Äå‡πÅ‡∏≠‡∏î„Äç[‡πÅ‡∏≠‡∏î‡∏ô‡∏¥‡πâ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°]" + "\n" + \
                  "üç≠„Äå‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç" + "\n" + \
                  "üç≠„Äå‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç" + "\n" + \
                  "üç≠„Äå‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç" + "\n" + \
                  "üç≠„Äå‡∏ö‡∏±‡∏ô‡∏ä‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç" + "\n" + \
                  "üç≠„ÄåGroupMemberList„Äç" + "\n" + \
                  "üç≠„Äå‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î„Äç[‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏°‡∏µ]" + "\n" + \
                  "üç≠„Äå‡∏•‡∏¥‡πâ‡∏á„Äç[‡∏Ç‡∏≠‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°]" + "\n" + \
                  "üç≠„Äå‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î„Äç[‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á]" + "\n" + \
                  "üç≠„Äå‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á„Äç[‡∏Ç‡∏≠‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°]" + "\n" + \
                  "üç≠„Äå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô„Äç" + "\n" + \
                  "üç≠„Äå‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏•‡πá‡∏≠‡∏Ñ„Äç" + "\n" + \
                  "üç≠„Äå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô mid„Äç" + "\n" + \
                  "üç≠„ÄåInvite:gcreator„Äç" + "\n" + \
                  "üç≠„ÄåSpam on/off„Äç" + "\n" + \
                  "üç≠„ÄåReject inv„Äç" + "\n" + \
                  "üç≠„ÄåAllban„Äç" + "\n" + \
                  "üç≠„Äå‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡πÄ‡∏ä‡∏Ñ‡∏î‡∏≥„Äç" + "\n" + \
                  "üç≠„Äå‡πÅ‡∏ó‡∏Ñ„Äç" + "\n" + \
                  "üç≠„Äå1‡πÅ‡∏ó‡∏Ñ„Äç" + "\n" + \
                  "üç≠„ÄåLurking on„Äç" + "\n" + \
                  "üç≠„ÄåLurking off„Äç" + "\n" + \
                  "üç≠„ÄåLurking reset„Äç" + "\n" + \
                  "üç≠„ÄåLurking„Äç" + "\n" + \
                  "üç≠„ÄåInvite„Äç" + "\n" + \
                  "üç≠„Äåuninstall„Äç" + "\n" + \
                  "üç≠„ÄåKick„Äç" + "\n" + \
                  "üç≠„Äå‡∏î‡∏≥„Äç" + "\n" + \
                  "üç≠[‡∏Ç‡∏≤‡∏ß]" + "\n" + \
                  "üç≠„Äå‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥„Äç[‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ö‡∏±‡∏ô‡∏ä‡∏µ‡∏î‡∏≥]" + "\n" + \
                  "üç≠„ÄåInstagram„Äç" + "\n" + \
                  "üç≠„ÄåFotoig„Äç" + "\n" + \
                  "üç≠„Äå‡∏¢‡∏π‡∏ó‡∏π‡∏õ„Äç" + "\n" + \
                  "üç≠„ÄåMusic„Äç" + "\n" + \
                  "üç≠„ÄåLyric„Äç" + "\n" + \
                  "üç≠„ÄåScreenshootWebsite„Äç" + "\n" + \
                  "üç≠„ÄåFilm:„Äç" + "\n" + \
                  "üç≠„ÄåKalender„Äç" + "\n" + \
                  "üç≠„ÄåCheckDate„Äç" + "\n" + \
                  "üç≠„ÄåTextig„Äç" + "\n" + \
                  "üç≠„ÄåWikipedia„Äç" + "\n" + \
                  "üç≠„ÄåUrban„Äç" + "\n" + \
                  "üç≠„ÄåAnime„Äç" + "\n" + \
                  "üç≠„Äå‡∏£‡∏π‡∏õ„Äç" + "\n" + \
                  "üç≠„ÄåPornhub„Äç" + "\n" + \
                  "üç≠[.bye @][‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°]" + "\n" + \
                  "üç≠[‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• @][‡∏Ç‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô]" + "\n" + \
                  "üç≠[Spam on ][]" + "\n" + \
                  "üç≠„ÄåSet„Äç[‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó]" + "\n" + \
                  "üç≠„Äå‡∏Å‡πá‡∏≠‡∏õ‡∏õ‡∏µ‡πâ @„Äç[‡∏Å‡πá‡∏≠‡∏õ‡∏õ‡∏µ‡πâ‡πÑ‡∏•‡∏ô‡πå‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô]" + "\n" + \
                  "üç≠„Äå‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡πá‡∏≠‡∏õ‡∏õ‡∏µ‡πâ„Äç[‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥]" + "\n" + \
                  "üç≠„Äå‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô„Äç[‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏≠‡∏ó]" + "\n" + \
                  "üç≠„Äå‡∏ö‡∏≠‡∏ó„Äç[‡πÄ‡∏ä‡∏Ñ‡∏ö‡∏≠‡∏ó]" + "\n" + \
                  "üç≠„Äå‡∏î‡∏¥‡∏™‡∏Å‡∏π„Äç‡∏î‡∏¥‡∏™‡πÄ‡∏£‡∏≤" + "\n" + \
                  "üç≠„Äå‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà: „Äç‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤" + "\n" + \
                  "üç≠„Äå‡∏ï‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà: „Äç‡∏ï‡∏±‡∏™‡πÄ‡∏£‡∏≤" + "\n" + \
                  "üç≠„Äå‡∏ï‡∏±‡∏™‡∏Ñ‡∏¥‡∏Å: „Äç‡∏ï‡∏±‡∏™‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" + "\n" + \
                  "üç≠„Äå‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å: „Äç‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" + "\n" + \
                  "üç≠„Äå‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å1-10„Äç‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" + "\n" + \
                  "üç≠„Äå‡∏î‡∏¥‡∏™‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°" + "\n" + \
                  "üç≠„Äå‡∏•‡∏ö‡∏£‡∏±‡∏ô„Äç[‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏£‡∏≤]" + "\n" + \
                  "üç≠„Äå‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å„Äç[‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î]" + "\n" + \
                  "üç≠„Äå.‡∏£‡∏±‡∏ô @„Äç[‡∏£‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏î‡∏¢‡πÅ‡∏≠‡∏î‡∏ä‡∏∑‡πà‡∏≠]" + "\n" + \
                  "üç≠„Äå.‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @„Äç[‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó‡πÇ‡∏î‡∏¢‡πÅ‡∏≠‡∏î‡∏ä‡∏∑‡πà‡∏≠]" + "\n" + \
                  "üç≠„Äå.‡∏£‡∏±‡∏ô: „Äç[‡∏£‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠]" + "\n" + \
                  "üç≠„Äå‡∏£‡∏±‡∏ô‡πÇ‡∏ó‡∏£„Äç‡πÄ‡∏ä‡∏¥‡∏ô‡πÇ‡∏ó‡∏£‡∏Å‡∏•‡∏∏‡πà‡∏°" + "\n" + \
                  "üç≠„Äå.gift„Äç‡πÄ‡∏£‡∏≤‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç" + "\n" + \
                  "üç≠„Äå.gift @„Äç‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡∏ä" + "\n" + \
                  "üç≠„Äå.giftall„Äç‡∏Ñ‡∏¥‡∏Å‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç" + "\n" + \
                  "üç≠„Äå‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô„Äç‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏≤‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô" + "\n" + \
                  "üç≠„Äå‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô„Äç‡∏õ‡∏¥‡∏î‡∏´‡∏≤‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô" + "\n" + \
                  "üç≠„Äå.‡πÄ‡∏ä‡∏¥‡∏ô‡πÅ‡∏≠‡∏î„Äç‡πÄ‡∏ä‡∏¥‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°" + "\n" + \
                  "üç≠„Äå.invitecancel„Äç‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°" + "\n" + \
                  "üç≠„Äå‡∏•‡∏ö‡πÅ‡∏ä‡∏ó„Äç‡∏•‡∏ö‡πÅ‡∏ä‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" + "\n" + \
                  "üç≠„Äå‡πÅ‡∏ó‡∏Ñ2‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡πÅ‡∏ó‡∏Ñ2‡πÄ‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡∏≠‡∏≠‡∏Å ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞ ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡∏ó‡∏±‡∏Å‡πÄ‡∏à‡πá‡∏ö ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î„Äç" + "\n" + \
                  "üç≠„Äå‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô: „Äç" + "\n" + \
                  "üç≠„Äå‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞: „Äç" + "\n" + \
                  "üç≠„Äå‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ô„Äç" + "\n" + \
                  "üç≠„Äå‡∏î‡∏∂‡∏á„Äç" + "\n" + \
                  "üç≠„Äå‡∏ö‡∏≠‡∏ó‡∏¢‡∏Å„Äç" + "\n" + \
                  "üç≠„Äå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î: „Äç" + "\n" + \
                  "üç≠„Äå‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° „Äç" + "\n" + \
                  "üç≠„Äå‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏ä‡∏ó„Äç" + "\n" + \
                  "üç≠„Äå‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô„Äç" + "\n" + \
                  "üç≠„Äå‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô„Äç" + "\n" + \
                  "üç≠„ÄåTx1:„Äç‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤" + "\n" + \
                  "üç≠„ÄåTx2:„Äç‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å" + "\n" + \
                  "üç≠„ÄåTag1:„Äç‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ1" + "\n" + \
                  "üç≠„ÄåTag2:„Äç‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ2" + "\n" + \
                  "üç≠„ÄåTx1-2„Äç‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î" + "\n" + \
                  "üç≠„ÄåTag1-2„Äç‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î" + "\n" + \
                  "üåßüå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶üå¶" + "\n" + \
                  "€û~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~€û" + "\n" + \
                  "‚ùÑ„Äå‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å’É‡∏¥€û‚Ä¢‚îÄ„Äç‚ùÑ" + "\n" + \
                  "‚ùÑ„Äå@ID. http://line.me/ti/p/p-susu000nunu „Äç‚ùÑ" + "\n" + \
                  "‚ùÑ‚ïê‚ïê‚ïê‚ïê"
    return myHelp

    
def helpset():
    helpSet = "‚ï≠‚ïê‚ïê‚ïê‚ïê[‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ] " + "\n" + \
    "‚ïë‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î]" + "\n" + \
    "‚ïë‡∏™‡πÅ‡∏õ‡∏°]" + "\n" + \
    "‚ïë‡∏≠‡∏±‡∏ü‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠]" + "\n" + \
    "‚ïë‡∏Ñ‡∏¥‡∏Å‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠]" + "\n" + \
    "‚ïë‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠‡∏Ñ‡∏¥‡∏Å1-10]" + "\n" + \
    "‚ïë‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤]" + "\n" + \
    "‚ïë‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤" + "\n" + \
    "‚ïë‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤" + "\n" + \
    "‚ï∞‚ïê‚ïê‚ïê‚ïê"
    return helpSet 

def helpkicker():
    helpKicker = "‚ï≠‚ïê‚ïê‚ïê‚ïêHelpKicker " + "\n" + \
    "‚ù•„ÄåK1-4 kick„Äç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏¥‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°" + "\n" + \
    "‚ù•„Äå1-4‡∏•‡∏ö‡∏™‡∏¥‡∏£‡∏¥„Äç‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ï‡∏∞‡∏ö‡∏≠‡∏ó‡∏™‡∏¥‡∏£‡∏¥" + "\n" + \
    "‚ù•„Äå‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å1-10„Äç‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß" + "\n" + \
    "‚ù•„Äå‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å1-10: „Äç‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß" + "\n" + \
    "‚ù•„Äå‡∏ï‡∏±‡∏™‡∏Ñ‡∏¥‡∏Å1-10:„Äç‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏™‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß" + "\n" + \
    "‚ù•„ÄåK1 invite„Äç" + "\n" + \
    "‚ù•„ÄåK2 inv„Äç" + "\n" + \
    "‚ù•„ÄåK3 vit„Äç" + "\n" + \
    "‚ù•„ÄåK1 tag„Äç" + "\n" + \
    "‚ù•„ÄåK1‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç" + "\n" + \
    "‚ù•„ÄåK2‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç" + "\n" + \
    "‚ù•„ÄåK3‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç" + "\n" + \
    "‚ù•„Äå‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥„Äç[‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á]" + "\n" + \
    "‚ù•„Äå‡πÑ‡∏•‡πà‡∏î‡∏≥„Äç" + "\n" + \
    "‚ù•„Äå‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥„Äç" + "\n" + \
    "‚ù•„Äå‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å:„Äç[‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î]" + "\n" + \
    "‚ù•„Äå‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å:„Äç[‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î]" + "\n" + \
    "‚ù•„ÄåProtect on/off„Äç" + "\n" + \
    "‚ù•„ÄåCancel pro on/off„Äç" + "\n" + \
    "‚ù•„Äåblock on/off„Äç" + "\n" + \
    "‚ù•„ÄåInvit pro on/off„Äç" + "\n" + \
    "‚ù•„ÄåLink pro on/off„Äç" + "\n" + \
    "‚ù•„ÄåJoin pro on/off„Äç" + "\n" + \
    "‚ù•„ÄåProall on/off„Äç" + "\n" + \
    "‚ù•„ÄåJoin on/off„Äç" + "\n" + \
    "‚ù•„Äåleave on/off„Äç" + "\n" + \
    "‚ù•„Äåread on/off„Äç" + "\n" + \
    "‚ù•„Äå‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î„Äç[‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ]" + "\n" + \
    "‚ù•„ÄåSelfbot on/off„Äç" + "\n" + \
    "‚ù•„Äå‡πÅ‡∏ó‡∏Ñ1‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î [‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏µ‡πà1]" + "\n" + \
    "‚ù•„Äå‡πÅ‡∏ó‡∏Ñ2‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î„Äç[‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏µ‡πà2]" + "\n" + \
    "‚ù•„ÄåChecksticker on/off„Äç" + "\n" + \
    "‚ù•„ÄåSider on/off„Äç" + "\n" + \
    "‚ù•„Äå‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö on/off„Äç" + "\n" + \
    "‚ù•„Äå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å on/off„Äç" + "\n" + \
    "‚ù•‚ïê‚ïê‚ïê‚ïê"
    return helpKicker
 
#==============================================================================#
def lineBot(op):
    try:
        if op.type == 0:
            return
        if op.type == 5:
            if settings["autoAdd"] == True:
                line.blockContact(op.param1)
                ki1.blockContact(op.param1)
                ki2.blockContact(op.param1)
                ki3.blockContact(op.param1) 
                ki4.blockContact(op.param1)
                ki5.blockContact(op.param1)
                ki6.blockContact(op.param1) 
                ki7.blockContact(op.param1)
                ki8.blockContact(op.param1)
                ki9.blockContact(op.param1)
                ki10.blockContact(op.param1)
        if op.type == 13:
            if lineMID in op.param3:
                G = line.getGroup(op.param1)
                if settings["autoJoin"] == True:
                    if settings["autoCancel"]["on"] == True:
                        if len(G.members) <= settings["autoCancel"]["members"]:
                            line.rejectGroupInvitation(op.param1)
                        else:
                            line.acceptGroupInvitation(op.param1)
                    else:
                        line.acceptGroupInvitation(op.param1)
                elif settings["autoCancel"]["on"] == True:
                    if len(G.members) <= settings["autoCancel"]["members"]:
                        line.rejectGroupInvitation(op.param1)
            else:
                Inviter = op.param3.replace("",',')
                InviterX = Inviter.split(",")
                matched_list = []
                for tag in settings["blacklist"]:
                    matched_list+=[str for str in InviterX if str == tag]
                if matched_list == []:
                    pass
                else:
                    line.cancelGroupInvitation(op.param1, matched_list)
#        if op.type == 13:
#            group = line.getGroup(op.param1)
#            if settings["autoJoin"] == True:
#                line.acceptGroupInvitation(op.param1)
#        if op.type == 24:
#            if settings["autoLeave"] == True:
#                line.leaveRoom(op.param1)
        if op.type == 24:
            print ("[ 24 ] ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°‡πÅ‡∏•‡πâ‡∏ß")
            if settings["autoLeave"] == True:
                line.leaveRoom(op.param1)
        if op.type == 25:
            msg = op.message           
            if msg.contentType == 13:
                if settings["contact"] == True:
                    #msg.contentType = 0
                    if 'displayName' in msg.contentMetadata:
                        contact = line.getContact(msg.contentMetadata["mid"])
                        try:
                            cu = line.getProfileCoverURL(msg.contentMetadata["mid"])
                        except:
                            cu = ""
                        line.sendMessage(msg.to,"[‡∏ä‡∏∑‡πà‡∏≠]:\n" + msg.contentMetadata["displayName"] + "\n[mid]:\n" + msg.contentMetadata["mid"] + "\n[‡∏ï‡∏±‡∏™]:\n" + contact.statusMessage + "\n[‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå]:\nhttp://dl.profile.line-cdn.net/" + contact.pictureStatus + "\n[‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏Å]:\n" + str(cu))
                    else:
                        contact = line.getContact(msg.contentMetadata["mid"])
                        try:
                            cu = line.getProfileCoverURL(msg.contentMetadata["mid"])
                        except:
                            cu = ""
                        line.sendMessage(msg.to,"[‡∏ä‡∏∑‡πà‡∏≠]:\n" + contact.displayName + "\n[mid]:\n" + msg.contentMetadata["mid"] + "\n[‡∏ï‡∏±‡∏™]:\n" + contact.statusMessage + "\n[‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå]:\nhttp://dl.profile.line-cdn.net/" + contact.pictureStatus + "\n[‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏Å]:\n" + str(cu))

        if op.type == 25:
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0:
                if sender != line.profile.mid:
                    to = sender
                else:
                    to = receiver
            else:
                to = receiver
            if msg.contentType == 0:
                if text is None:
                    return
#~~~~~~~~~~~~~~~~‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡∏ô‡∏∏‡∏à‡∏±‡∏á~~~~~~~~~~~~~~#
 
                if "‡∏™‡πÅ‡∏õ‡∏° " in msg.text.lower():
                    spl = re.split("‡∏™‡πÅ‡∏õ‡∏° ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        mts = spl[1]
                        mtsl = mts.split()
                        mtsTimeArg = len(mtsl) - 1
                        mtsTime = mtsl[mtsTimeArg]
                        del mtsl[mtsTimeArg]
                        mtosay = " ".join(mtsl)
                        global Rapid1To
                        Rapid1To = msg.to
                        RapidTime = mtsTime
                        rmtosay = []
                        for count in range(0,int(RapidTime)):
                            rmtosay.insert(count,mtosay)
                        p = Pool(20)
                        p.map(Rapid1Say,rmtosay)
                        p.close()
#~~~~~~~~~~~~~~~~~~~‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‚óá‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ~~~~~~~~~~~~~~#
              
                if text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á':
                    myHelp = myhelp()
                    line.sendMessage(to, str(myHelp))
                elif text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á2':
                    helpSet = helpset()
                    line.sendMessage(to, str(helpSet))
                    sendMessageWithMention(to, lineMID)
                elif text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á3':
                    helpKicker = helpkicker()
                    line.sendMessage(to, str(helpKicker))
                elif text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á4':
                    listGrup = listgrup()
                    line.sendMessage(to, str(listGrup))
                elif text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á5':
                    helpSetting = helpsetting()
                    line.sendMessage(to, str(helpSetting))
#==============================================================================#
                elif text.lower() == 'speed':
                    start = time.time()
                    line.sendMessage(to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
                    elapsed_time = time.time() - start
                    line.sendMessage(msg.to, "[ %s Seconds ] [ " % (elapsed_time) + str(int(round((time.time() - start) * 1000)))+" ms ]")
                elif text.lower() == 'sp':
                    start = time.time()
                    line.sendMessage(to, " ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß...")
                    elapsed_time = time.time() - start
                    line.sendMessage(msg.to, "[ %s Seconds ] [ " % (elapsed_time) + str(int(round((time.time() - start) * 1000)))+" ms ]")						
                elif text.lower() == '‡∏£‡∏µ‡∏ö‡∏≠‡∏ó':
                    line.sendMessage(to, "üíô ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà..‡πÄ‡∏à‡πâ‡∏≤‡∏ô‡∏≤‡∏¢ üíô")
                    line.sendMessage(to, "üíô ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡∏ó..‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô üíô")
                    restartBot()
                elif text.lower() == '‡∏≠‡∏≠‡∏ô':
                    timeNow = time.time()
                    runtime = timeNow - botStart
                    runtime = format_timespan(runtime)
                    line.sendMessage(to, "üíú‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏¢‡∏π‡πà...üíú\n {}".format(str(runtime)))
                elif text.lower() == '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ':
                    try:
                        arr = []
                        owner = "ud3a6bfda60a956cca0f58f2a14bae808"
                        creator = line.getContact(owner)
                        contact = line.getContact(lineMID)
                        grouplist = line.getGroupIdsJoined()
                        contactlist = line.getAllContactIds()
                        blockedlist = line.getBlockedContactIds()
                        ret_ = "‚ïî‚ïê‚ïê[‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å’É‡∏¥€û‚Ä¢‚îÄ]"
                        ret_ += "\n‚ï†€ù ‡∏ä‡∏∑‡πà‡∏≠ ‚ïê {}".format(contact.displayName)
                        ret_ += "\n‚ï†€ù ‡∏Å‡∏•‡∏∏‡πà‡∏° ‚ïê {}".format(str(len(grouplist)))
                        ret_ += "\n‚ï†€ù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‚ïê {}".format(str(len(contactlist)))
                        ret_ += "\n‚ï†€ù ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ ‚ïê {}".format(str(len(blockedlist)))
                        ret_ += "\n‚ï†‚ïê‚ïê[‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞]"
                        ret_ += "\n‚ï†€ù ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á ‚ïê {}".format(creator.displayName)
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‚úØKIEBOTLINE‚úØ ]"
                        line.sendContact(to, owner)
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
#==============================================================================#
                elif text.lower() == 'set':
                    try:
                        ret_ = "‚ïî‚ïê[‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å’É‡∏¥€û‚Ä¢‚îÄ]‚ïê‚ïê‚ïê"
                        if settings["contact"] == True: ret_ += "\n‚ù• „Äå‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ„Äç    ‚úò "
                        if settings["autoAdd"] == True: ret_ += "\n‚ù• „Äå‡∏ö‡∏•‡πâ‡∏≠‡∏Ñ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏ö‡∏•‡πâ‡∏≠‡∏Ñ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ„Äç    ‚úò "
                        if settings["autoJoin"] == True: ret_ += "\n‚ù• „Äå‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡πÇ‡∏ï‡πâ„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡πÇ‡∏ï‡πâ„Äç    ‚úò "
                        if settings["autoCancel"]["on"] == True:ret_+="\n‚ù• „Äå‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç: " + str(settings["autoCancel"]["members"]) + " ‚Üí ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç    ‚úò "
                        if settings["autoLeave"] == True: ret_ += "\n‚ù• „Äå‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°„Äç ‚úò "
                        if settings["autoRead"] == True: ret_ += "\n‚ù• „Äå‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ„Äç   ‚úò "				
                        if settings["checkSticker"] == True: ret_ += "\n‚ù• „ÄåSticker„Äç ‚úî"
                        else: ret_ += "\n‚ù• „ÄåSticker„Äç        ‚úò "
                        if settings["detectMention"] == True: ret_ += "\n‚ù• „Äå‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ„Äç ‚úò "
                        if settings["potoMention"] == True: ret_ += "\n‚ù• „Äå‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ„Äç ‚úò "						
                        if RfuProtect["inviteprotect"] == True: ret_ += "\n‚ù• „Äå‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç „Äç‚úò "
                        if RfuProtect["cancelprotect"] == True: ret_ += "\n‚ù• „Äå‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç„Äç ‚úò "
                        if RfuProtect["protect"] == True: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô„Äç ‚úò "
                        if RfuProtect["linkprotect"] == True: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á„Äç ‚úò "
                        if RfuProtect["Protectguest"] == True: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å„Äç ‚úò "
                        if RfuProtect["Protectjoin"] == True: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç ‚úî"
                        else: ret_ += "\n‚ù• „Äå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°„Äç ‚úò "						
                        ret_ += "\n‚ïö‚ïê‚ïê‚ïê‚ïê[ Status ]‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ"
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
                elif text.lower() == 'block on':
                    settings["autoAdd"] = True
                    line.sendMessage(to, "üíô ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == 'block off':
                    settings["autoAdd"] = False
                    line.sendMessage(to, "üíô ‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == 'join on':
                    settings["autoJoin"] = True
                    line.sendMessage(to, "üíô ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == 'join off':
                    settings["autoJoin"] = False
                    line.sendMessage(to, "üíô ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..‡∏ä‡∏•")
                elif text.lower() == 'contact on':
                    settings["contact"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ")
                elif text.lower() == 'contact off':
                    settings["contact"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ")
                elif "Gcancel:" in msg.text:
                    try:
                        strnum = msg.text.replace("Gcancel:","")
                        if strnum == "off":
                                settings["autoCancel"]["on"] = False
                                if settings["lang"] == "JP":
                                    line.sendMessage(msg.to,"‚ù•‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏£‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                                else:
                                    line.sendMessage(msg.to,"ÂÖ≥‰∫ÜÈÇÄËØ∑ÊãíÁªù„ÄÇË¶ÅÊó∂ÂºÄËØ∑ÊåáÂÆö‰∫∫Êï∞ÂèëÈÄÅ")
                        else:
                                num =  int(strnum)
                                settings["autoCancel"]["on"] = True
                                if settings["lang"] == "JP":
                                    line.sendMessage(msg.to,strnum + " ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏à‡∏∞‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
                                else:
                                    line.sendMessage(msg.to,strnum + "‰Ωø‰∫∫‰ª•‰∏ãÁöÑÂ∞èÁªÑÁî®Ëá™Âä®ÈÇÄËØ∑ÊãíÁªù")
                    except:
                        if settings["lang"] == "JP":
                                line.sendMessage(msg.to,"Value is wrong")
                        else:
                                line.sendMessage(msg.to,"Bizarre ratings")					
                elif text.lower() == 'leave on':
                    settings["autoLeave"] = True
                    line.sendMessage(to, "üíô ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == 'leave off':
                    settings["autoLeave"] = False
                    line.sendMessage(to, "üíô ‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == 'read on':
                    settings["autoRead"] = True
                    line.sendMessage(to, "üíô ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == 'read off':
                    settings["autoRead"] = False
                    line.sendMessage(to, "üíô ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πâ‡∏Å':
                    settings["checkSticker"] = True
                    line.sendMessage(to, "üíô ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πâ‡∏Å':
                    settings["checkSticker"] = False
                    line.sendMessage(to, "üíô ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢..")    
                elif text.lower() == '‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏õ‡∏¥‡∏î':
                    settings["timeline"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß.")
                elif text.lower() == '‡πÅ‡∏ä‡∏£‡πå‡∏õ‡∏¥‡∏î':
                    settings["timeline"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß.")
#==============================================================================#
                elif text.lower() == '‡∏Ñ‡∏ó':
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, lineMID)
                elif text.lower() == '‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á':
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, "ud3a6bfda60a956cca0f58f2a14bae808")
                elif text.lower() == '‡∏°‡∏¥‡∏™':
                    line.sendMessage(msg.to,"[MID]\n" +  lineMID)
                elif text.lower() == '‡∏ä‡∏∑‡πà‡∏≠':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"[DisplayName]\n" + me.displayName)
                elif text.lower() == '‡∏ï‡∏±‡∏™':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"[StatusMessage]\n" + me.statusMessage)
                elif text.lower() == '‡∏£‡∏π‡∏õ':
                    me = line.getContact(lineMID)
                    line.sendImageWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus)
                elif text.lower() == '‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠':
                    me = line.getContact(lineMID)
                    line.sendVideoWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus + "/vp")
                elif text.lower() == '‡∏õ‡∏Å':
                    me = line.getContact(lineMID)
                    cover = line.getProfileCoverURL(lineMID)    
                    line.sendImageWithURL(msg.to, cover)
                elif msg.text.lower().startswith("‡∏Ñ‡∏ó "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            mi_d = contact.mid
                            line.sendContact(msg.to, mi_d)
                elif msg.text.lower().startswith("‡∏°‡∏¥‡∏™ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        ret_ = "[ Mid ]"
                        for ls in lists:
                            ret_ += "\n{}" + ls
                        line.sendMessage(msg.to, str(ret_))
                elif msg.text.lower().startswith("‡∏ä‡∏∑‡∏≠ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ Display Name ]\n" + contact.displayName)
                elif msg.text.lower().startswith("‡∏ï‡∏±‡∏™ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ Status Message ]\n{}" + contact.statusMessage)
                elif msg.text.lower().startswith("‡∏î‡∏¥‡∏™ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureStatus
                            line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureStatus + "/vp"
                            line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏õ‡∏Å "):
                    if line != None:
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                path = line.getProfileCoverURL(ls)
                                line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏Å‡πá‡∏≠‡∏õ‡∏õ‡∏µ‡πâ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        for mention in mentionees:
                            contact = mention["M"]
                            break
                        try:
                            line.cloneContactProfile(contact)
                            line.sendMessage(msg.to, "‡∏Å‡πä‡∏≠‡∏õ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß  (‚ó°‚Äø‚ó°‚úø) ")
                        except:
                            line.sendMessage(msg.to, "‡∏Å‡πä‡∏≠‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏Å‡∏ï‡∏¥  (‚ó°‚Äø‚ó°‚úø) ")
                            
                elif text.lower() == '‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡πá‡∏≠‡∏õ‡∏õ‡∏µ‡πâ':
                    try:
                        lineProfile.displayName = str(myProfile["displayName"])
                        lineProfile.statusMessage = str(myProfile["statusMessage"])
                        lineProfile.pictureStatus = str(myProfile["pictureStatus"])
                        line.updateProfileAttribute(8, lineProfile.pictureStatus)
                        line.updateProfile(lineProfile)
                        line.sendMessage(msg.to, "Berhasil restore profile")
                    except:
                        line.sendMessage(msg.to, "Gagal restore profile")

                elif "Spam " in msg.text:
                    txt = msg.text.split(" ")
                    jmlh = int(txt[2])
                    teks = msg.text.replace("Spam "+str(txt[1])+" "+str(jmlh)+" ","")
                    tulisan = jmlh * (teks+"\n")
                    if txt[1] == "on":
                        if jmlh <= 100000:
                           for x in range(jmlh):
                               line.sendMessage(msg.to, teks)
                        else:
                           line.sendMessage(msg.to, "Out of Range!")
                    elif txt[1] == "off":
                        if jmlh <= 100000:
                            line.sendMessage(msg.to, tulisan)
                        else:
                            line.sendMessage(msg.to, "Out Of Range!")
						
#==============================================================================#
#===================================================================#
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Å‡∏π':
                            settings["changePicture"] = True
                            line.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å1':
                            settings["changePicture"] = True
                            ki1.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å2':
                            settings["changePicture"] = True
                            ki2.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å3':
                            settings["changePicture"] = True
                            ki3.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å4':
                            settings["changePicture"] = True
                            ki4.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å5':
                            settings["changePicture"] = True
                            ki5.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å6':
                            settings["changePicture"] = True
                            ki6.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å7':
                            settings["changePicture"] = True
                            ki7.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å8':
                            settings["changePicture"] = True
                            ki8.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å9':
                            settings["changePicture"] = True
                            ki9.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Ñ‡∏¥‡∏Å10':
                            settings["changePicture"] = True
                            ki10.sendMessage(to, "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏•‡∏á‡∏°‡∏≤ ‡∏à‡πà‡∏∞ (^__^)..?")
                elif text.lower() == '‡∏î‡∏¥‡∏™‡∏Å‡∏•‡∏∏‡πà‡∏°':
                            if msg.toType == 2:
                                if to not in settings["changeGroupPicture"]:
                                    settings["changeGroupPicture"].append(to)
                                line.sendMessage(to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢.")


#==============================================
                elif msg.text.lower().startswith("mimicadd "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            settings["mimic"]["target"][target] = True
                            line.sendMessage(msg.to,"Mimic has been added as")
                            break
                        except:
                            line.sendMessage(msg.to,"Added Target Fail !")
                            break
                elif msg.text.lower().startswith("mimicdel "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            del settings["mimic"]["target"][target]
                            line.sendMessage(msg.to,"Mimic deleting succes...")
                            break
                        except:
                            line.sendMessage(msg.to,"Deleted Target Fail !")
                            break
                elif text.lower() == 'mimiclist':
                    if settings["mimic"]["target"] == {}:
                        line.sendMessage(msg.to,"Tidak Ada Target")
                    else:
                        mc = "‚ïî‚ïê‚ïê[ Mimic List ]"
                        for mi_d in settings["mimic"]["target"]:
                            mc += "\n‚ï† "+line.getContact(mi_d).displayName
                        line.sendMessage(msg.to,mc + "\n‚ïö‚ïê‚ïê[ Finish ]")
                    
                elif "mimic" in msg.text.lower():
                    sep = text.split(" ")
                    mic = text.replace(sep[0] + " ","")
                    if mic == "on":
                        if settings["mimic"]["status"] == False:
                            settings["mimic"]["status"] = True
                            line.sendMessage(msg.to,"Mimic enabled.")
                    elif mic == "off":
                        if settings["mimic"]["status"] == True:
                            settings["mimic"]["status"] = False
                            line.sendMessage(msg.to,"Mimic disabled.")
#==============================================================================#
                elif text.lower() == '‡πÅ‡∏≠‡∏î':
                    group = line.getGroup(to)
                    GS = group.creator.mid
                    line.sendContact(to, GS)
                    line.sendMessage(to, "‡∏Ñ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°")
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    gid = line.getGroup(to)
                    line.sendMessage(to, "ID GROUP \n" + gid.id)
                elif text.lower() == '‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    group = line.getGroup(to)
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    line.sendImageWithURL(to, path)
                elif text.lower() == '‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    gid = line.getGroup(to)
                    line.sendMessage(to, "Name Group -> \n" + gid.name)
                elif text.lower() == '‡∏•‡∏¥‡πâ‡∏á':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            ticket = line.reissueGroupTicket(to)
                            line.sendMessage(to, "Link Qr Group\nhttps://line.me/R/ti/g/{}".format(str(ticket)))
                elif text.lower() == '‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            line.sendMessage(to, "Link Qr to open")
                        else:
                            group.preventedJoinByTicket = False
                            line.updateGroup(group)
                            line.sendMessage(to, "Link Qr to open")
                elif text.lower() == '‡∏•‡∏¥‡πâ‡∏á‡∏õ‡∏¥‡∏î':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == True:
                            line.sendMessage(to, "Link Qr to closed.")
                        else:
                            group.preventedJoinByTicket = True
                            line.updateGroup(group)
                            line.sendMessage(to, "Link Qr to closed.")
                elif text.lower() == '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    group = line.getGroup(to)
                    try:
                        gCreator = group.creator.displayName
                    except:
                        gCreator = "Tidak ditemukan"
                    if group.invitee is None:
                        gPending = "0"
                    else:
                        gPending = str(len(group.invitee))
                    if group.preventedJoinByTicket == True:
                        gQr = "Tertutup"
                        gTicket = "Tidak ada"
                    else:
                        gQr = "Terbuka"
                        gTicket = "https://line.me/R/ti/g/{}".format(str(line.reissueGroupTicket(group.id)))
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    ret_ = "‚ïî‚ïê‚ïê[ Group Info ]"
                    ret_ += "\n‚ï† Nama Group : {}".format(str(group.name))
                    ret_ += "\n‚ï† ID Group : {}".format(group.id)
                    ret_ += "\n‚ï† Pembuat : {}".format(str(gCreator))
                    ret_ += "\n‚ï† Jumlah Member : {}".format(str(len(group.members)))
                    ret_ += "\n‚ï† Jumlah Pending : {}".format(gPending)
                    ret_ += "\n‚ï† Group Qr : {}".format(gQr)
                    ret_ += "\n‚ï† Group Ticket : {}".format(gTicket)
                    ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    line.sendMessage(to, str(ret_))
                    line.sendImageWithURL(to, path)
                elif text.lower() == 'groupmemberlist':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        ret_ = "‚ïî‚ïê‚ïê[ Member List ]"
                        no = 0 + 1
                        for mem in group.members:
                            ret_ += "\n‚ï† {}. {}".format(str(no), str(mem.displayName))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ]".format(str(len(group.members)))
                        line.sendMessage(to, str(ret_))
                elif text.lower() == '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î':
                        groups = line.groups
                        ret_ = "‚ïî‚ïê‚ïê[ Group List ]"
                        no = 0 + 1
                        for gid in groups:
                            group = line.getGroup(gid)
                            ret_ += "\n‚ï† {}. {} | {}".format(str(no), str(group.name), str(len(group.members)))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} Groups ]".format(str(len(groups)))
                        line.sendMessage(to, str(ret_))

                elif text.lower() == 'k1‡∏Å‡∏•‡∏∏‡πà‡∏°':
                        groups = ki.groups
                        ret_ = "‚ïî‚ïê‚ïê[ Group List ]"
                        no = 0 + 1
                        for gid in groups:
                            group = ki.getGroup(gid)
                            ret_ += "\n‚ï† {}. {} | {}".format(str(no), str(group.name), str(len(group.members)))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} Groups ]".format(str(len(groups)))
                        ki.sendMessage(to, str(ret_))

                elif text.lower() == 'k2‡∏Å‡∏•‡∏∏‡πà‡∏°':
                        groups = kk.groups
                        ret_ = "‚ïî‚ïê‚ïê[ Group List ]"
                        no = 0 + 1
                        for gid in groups:
                            group = kk.getGroup(gid)
                            ret_ += "\n‚ï† {}. {} | {}".format(str(no), str(group.name), str(len(group.members)))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} Groups ]".format(str(len(groups)))
                        kk.sendMessage(to, str(ret_))

                elif text.lower() == 'k3‡∏Å‡∏•‡∏∏‡πà‡∏°':
                        groups = kc.groups
                        ret_ = "‚ïî‚ïê‚ïê[ Group List ]"
                        no = 0 + 1
                        for gid in groups:
                            group = kc.getGroup(gid)
                            ret_ += "\n‚ï† {}. {} | {}".format(str(no), str(group.name), str(len(group.members)))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} Groups ]".format(str(len(groups)))
                        kc.sendMessage(to, str(ret_))
						
                elif text.lower() == 'k4‡∏Å‡∏•‡∏∏‡πà‡∏°':
                        groups = ke.groups
                        ret_ = "‚ïî‚ïê‚ïê[ Group List ]"
                        no = 0 + 1
                        for gid in groups:
                            group = ke.getGroup(gid)
                            ret_ += "\n‚ï† {}. {} | {}".format(str(no), str(group.name), str(len(group.members)))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} Groups ]".format(str(len(groups)))
                        ke.sendMessage(to, str(ret_))					
                elif "‡∏£‡∏±‡∏ô‡πÇ‡∏ó‡∏£" == msg.text.lower():
                    line.inviteIntoGroupCall(msg.to,[uid.mid for uid in line.getGroup(msg.to).members if uid.mid != line.getProfile().mid])
                    line.sendMessage(msg.to,"‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à(ÔΩÄ„Éªœâ„Éª¬¥)")	
                elif ".sh " in msg.text.lower():
                    spl = re.split(".sh ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            line.sendMessage(msg.to,subprocess.getoutput(spl[1]))
                        except:
                            pass	
                elif msg.text.lower() == "‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°":
                    line.sendMessage(msg.to,"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡πÉ‡∏à‡πÄ‡∏¢‡πá‡∏ô‡πÜ")
                    all = line.getGroupIdsJoined()
                    text = ""
                    cnt = 0
                    for i in all:
                        text += line.getGroup(i).name + "\n" + i + "\n\n"
                        cnt += 1
                        if cnt == 10:
                            line.sendMessage(msg.to,text[:-2])
                            text = ""
                            cnt = 0
                    line.sendMessage(msg.to,text[:-2])
                    cnt = 0				
                elif "|!" in msg.text:
                    spl = msg.text.split("|!")
                    if spl[len(spl)-1] == "":
                        line.sendMessage(msg.to,"‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡∏¢‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô:\nline://nv/chatMsg?chatId="+msg.to+"&messageId="+msg.id)	
                elif ".‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°" in msg.text.lower():
                    spl = re.split(".denyall",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        spl[1] = spl[1].strip()
                        ag = line.getGroupIdsInvited()
                        txt = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô "+str(len(ag))+" ‡∏Å‡∏•‡∏∏‡πà‡∏°"
                        if spl[1] != "":
                            txt = txt + " ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° \""+spl[1]+"\""
                        txt = txt + "\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà.."
                        line.sendText(msg.to,txt)
                        procLock = len(ag)
                        for gr in ag:
                            try:
                                line.acceptGroupInvitation(gr)
                                if spl[1] != "":
                                    line.sendText(gr,spl[1])
                                line.leaveGroup(gr)
                            except:
                                pass
                        line.sendText(msg.to,"‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
                elif ".bye " in msg.text.lower():
                    if msg.toType == 2:
                        prov = eval(msg.contentMetadata["MENTION"])["MENTIONEES"]
                        allmid = []
                        for i in range(len(prov)):
                            line.kickoutFromGroup(msg.to,[prov[i]["M"]])
                            allmid.append(prov[i]["M"])
                        line.findAndAddContactsByMids(allmid)
                        line.inviteIntoGroup(msg.to,allmid)
                        line.cancelGroupInvitation(msg.to,allmid)

                elif msg.text.lower() == ".myid":
                    line.sendMessage(msg.to,user1)
                elif msg.text.lower().startswith(".mentionall"):
                    data = msg.text[len(".mentionall"):].strip()
                    if data == "":
                        group = line.getGroup(msg.to)
                        nama = [contact.mid for contact in group.members if contact.mid != user1]
                        cb = ""
                        cb2 = ""
                        count = 1
                        strt = len(str(count)) + 2
                        akh = int(0)
                        cnt = 0
                        for md in nama:
                            akh = akh + len(str(count)) + 2 + 5
                            cb += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps(md)+"},"""
                            strt = strt + len(str(count+1)) + 2 + 6
                            akh = akh + 1
                            cb2 += str(count)+". @name\n"
                            cnt = cnt + 1
                            if cnt == 50:
                                cb = (cb[:int(len(cb)-1)])
                                cb2 = cb2[:-1]
                                msg.contentType = 0
                                msg.text = cb2
                                msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                                try:
                                    line.sendMessage(msg)
                                except:
                                    line.sendText(msg.to,"[[NO MENTION]]")
                                cb = ""
                                cb2 = ""
                                strt = len(str(count)) + 2
                                akh = int(0)
                                cnt = 0
                            count += 1
                        cb = (cb[:int(len(cb)-1)])
                        cb2 = cb2[:-1]
                        msg.contentType = 0
                        msg.text = cb2
                        msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                        try:
                            line.sendMessage(msg)
                        except:
                            line.sendText(msg.to,"[[NO MENTION]]")
                    elif data[0] == "<":
                        mentargs = int(data[1:].strip())
                        group = line.getGroup(msg.to)
                        nama = [contact.mid for contact in group.members if contact.mid != user1]
                        cb = ""
                        cb2 = ""
                        count = 1
                        strt = len(str(count)) + 2
                        akh = int(0)
                        cnt = 0
                        for md in nama:
                            if count > mentargs:
                                break
                            akh = akh + len(str(count)) + 2 + 5
                            cb += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps(md)+"},"""
                            strt = strt + len(str(count+1)) + 2 + 6
                            akh = akh + 1
                            cb2 += str(count)+". @name\n"
                            cnt = cnt + 1
                            if cnt == 50:
                                cb = (cb[:int(len(cb)-1)])
                                cb2 = cb2[:-1]
                                msg.contentType = 0
                                msg.text = cb2
                                msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                                try:
                                    line.sendMessage(msg)
                                except:
                                    line.sendMessage(msg.to,"[[NO MENTION]]")
                                cb = ""
                                cb2 = ""
                                strt = len(str(count)) + 2
                                akh = int(0)
                                cnt = 0
                            count += 1
                        cb = (cb[:int(len(cb)-1)])
                        cb2 = cb2[:-1]
                        msg.contentType = 0
                        msg.text = cb2
                        msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                        try:
                            line.sendMessage(msg)
                        except:
                            line.sendMessage(msg.to,"[[NO MENTION]]")
                    elif data[0] == ">":
                        mentargs = int(data[1:].strip())
                        group = line.getGroup(msg.to)
                        nama = [contact.mid for contact in group.members if contact.mid != user1]
                        cb = ""
                        cb2 = ""
                        count = 1
                        if mentargs >= 0:
                            strt = len(str(mentargs)) + 2
                        else:
                            strt = len(str(count)) + 2
                        akh = int(0)
                        cnt = 0
                        for md in nama:
                            if count < mentargs:
                                count += 1
                                continue
                            akh = akh + len(str(count)) + 2 + 5
                            cb += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps(md)+"},"""
                            strt = strt + len(str(count+1)) + 2 + 6
                            akh = akh + 1
                            cb2 += str(count)+". @name\n"
                            cnt = cnt + 1
                            if cnt == 50:
                                cb = (cb[:int(len(cb)-1)])
                                cb2 = cb2[:-1]
                                msg.contentType = 0
                                msg.text = cb2
                                msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                                try:
                                    line.sendMessage(msg)
                                except:
                                    line.sendMessage(msg.to,"[[NO MENTION]]")
                                cb = ""
                                cb2 = ""
                                strt = len(str(count)) + 2
                                akh = int(0)
                                cnt = 0
                            count += 1
                        cb = (cb[:int(len(cb)-1)])
                        cb2 = cb2[:-1]
                        msg.contentType = 0
                        msg.text = cb2
                        msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                        try:
                            line.sendMessage(msg)
                        except:
                            line.sendMessage(msg.to,"[[NO MENTION]]")
                    elif data[0] == "=":
                        mentargs = int(data[1:].strip())
                        group = line.getGroup(msg.to)
                        nama = [contact.mid for contact in group.members if contact.mid != user1]
                        cb = ""
                        cb2 = ""
                        count = 1
                        akh = int(0)
                        cnt = 0
                        for md in nama:
                            if count != mentargs:
                                count += 1
                                continue
                            akh = akh + len(str(count)) + 2 + 5
                            strt = len(str(count)) + 2
                            cb += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps(md)+"},"""
                            strt = strt + len(str(count+1)) + 2 + 6
                            akh = akh + 1
                            cb2 += str(count)+". @name\n"
                            cnt = cnt + 1
                            if cnt == 50:
                                cb = (cb[:int(len(cb)-1)])
                                cb2 = cb2[:-1]
                                msg.contentType = 0
                                msg.text = cb2
                                msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                                try:
                                    line.sendMessage(msg)
                                except:
                                    line.sendMessage(msg.to,"[[NO MENTION]]")
                                cb = ""
                                cb2 = ""
                                strt = len(str(count)) + 2
                                akh = int(0)
                                cnt = 0
                            count += 1
                        cb = (cb[:int(len(cb)-1)])
                        cb2 = cb2[:-1]
                        msg.contentType = 0
                        msg.text = cb2
                        msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+cb+']}','EMTVER':'4'}
                        try:
                            line.sendMessage(msg)
                        except:
                            line.sendMessage(msg.to,"[[NO MENTION]]")
         
                elif ".‡∏ä‡∏∑‡πà‡∏≠ " in msg.text.lower():
                    spl = re.split(".name ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        prof = line.getProfile()
                        prof.displayName = spl[1]
                        line.updateProfile(prof)
                        line.sendMessage(msg.to,"‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
         
                elif ".join " in msg.text.lower():
                    spl = re.split(".join ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            gid = spl[1].split(" ")[0]
                            ticket = spl[1].split(" ")[1].replace("line://ti/g/","") if "line://ti/g/" in spl[1].split(" ")[1] else spl[1].split(" ")[1].replace("http://line.me/R/ti/g/","") if "http://line.me/R/ti/g/" in spl[1].split(" ")[1] else spl[1].split(" ")[1]
                            line.acceptGroupInvitationByTicket(gid,ticket)
                        except Exception as e:
                            line.sendMessage(msg.to,str(e))	
                					
                elif msg.text.lower().startswith("pz:gac "):
                    pnum = re.split("pz:gac ",msg.text,flags=re.IGNORECASE)[1]
                    pnum = "66"+pnum[1:]
                    GACReq = GACSender.send(pnum)
                    if GACReq.responseNum == 0:
                        if msg.toType != 0:
                                ki2.sendMessage(msg.to,"‡∏™‡πà‡∏á SMS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß (ÔΩÄ„Éªœâ„Éª¬¥)")
                        else:
                                ki2.sendMessage(msg.from_,"‡∏™‡πà‡∏á SMS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß (ÔΩÄ„Éªœâ„Éª¬¥)")
                    elif GACReq.responseNum == 1:
                        if msg.toType != 0:
                                ki2.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á SMS ‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (ÔΩÄ„Éªœâ„Éª¬¥)\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                        else:
                                ki2.sendMessage(msg.from_,"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á SMS ‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (ÔΩÄ„Éªœâ„Éª¬¥)\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                    else:
                        if msg.toType != 0:
                                ki2.sendMessage(msg.to,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
                        else:
                                ki2.sendMessage(msg.from_,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
                elif msg.text.lower() == ".groupurl":
                    if msg.toType == 2:
                        line.sendMessage(msg.to,"http://line.me/R/ti/g/"+str(line.reissueGroupTicket(msg.to)))
                    else:
                        line.sendMessage(msg.to,"‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
                elif ".groupurl " in msg.text.lower():
                    spl = re.split(".groupurl ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            line.sendMessage(msg.to,"http://line.me/R/ti/g/"+str(line.reissueGroupTicket(spl[1])))
                        except Exception as e:
                            line.sendMessage(msg.to,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• \""+e.reason+"\")")

                if msg.text.lower() == ".me":
                    msg.contentType = 13
                    msg.text = None
                    msg.contentMetadata = {'mid': user1}
                    line.sendMessage(msg)
                if msg.text.lower() == ".gift":
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': '',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '1'}
                    msg.text = None
                    line.sendMessage(msg)
                if msg.text.lower() == ".giftall":
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': '',
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '1'}
                    msg.text = None
                    ki1.sendMessage(msg)
                    ki2.sendMessage(msg)
                    ki3.sendMessage(msg)
                    ki4.sendMessage(msg)
                    ki5.sendMessage(msg)
                    ki6.sendMessage(msg)
                    ki7.sendMessage(msg)
                    ki8.sendMessage(msg)
                    ki9.sendMessage(msg)
                    ki10.sendMessage(msg)
                if ".gift " in msg.text.lower():
                    red = re.compile(re.escape('.gift '),re.IGNORECASE)
                    themeid = red.sub('',msg.text)
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': themeid,
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '1'}
                    msg.text = None
                    line.sendMessage(msg)						
#==============================================================================#
                elif text.lower() == '‡πÅ‡∏ó‡∏Ñ':
                    group = line.getGroup(msg.to)
                    nama = [contact.mid for contact in group.members]
                    k = len(nama)//20
                    for a in range(k+1):
                        txt = ''
                        s=0
                        b=[]
                        for i in group.members[a*20 : (a+1)*20]:
                            b.append({"S":str(s), "E" :str(s+6), "M":i.mid})
                            s += 7
                            txt += '@Alin \n'
                        line.sendMessage(to, text=txt, contentMetadata={'MENTION': json.dumps({'MENTIONEES':b})}, contentType=0)
                        line.sendMessage(to, "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {} ‡∏Ñ‡∏ô".format(str(len(nama))))

                elif text.lower() == '1‡πÅ‡∏ó‡∏Ñ':
                    group = line.getGroup(msg.to)
                    nama = [contact.mid for contact in group.members if contact.mid != lineMID]
                    k = len(nama)//20
                    for a in range(k+1):
                        txt = ''
                        s=0
                        b=[]
                        for i in group.members[a*20 : (a+1)*20]:
                            b.append({"S":str(s), "E" :str(s+6), "M":i.mid})
                            s += 7
                            txt += '@Alin \n'
                        ki1.sendMessage(to, text=txt, contentMetadata={'MENTION': json.dumps({'MENTIONEES':b})}, contentType=0)
                        ki1.sendMessage(to, "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ‡∏Ñ‡∏ô".format(str(len(nama))))          

                elif text.lower() == 'lurking on':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to in read['readPoint']:
                            try:
                                del read['readPoint'][msg.to]
                                del read['readMember'][msg.to]
                                del read['readTime'][msg.to]
                            except:
                                pass
                            read['readPoint'][msg.to] = msg.id
                            read['readMember'][msg.to] = ""
                            read['readTime'][msg.to] = datetime.now().strftime('%H:%M:%S')
                            read['ROM'][msg.to] = {}
                            with open('read.json', 'w') as fp:
                                json.dump(read, fp, sort_keys=True, indent=4)
                                line.sendMessage(msg.to,"Lurking enabled")
                    else:
                        try:
                            del read['readPoint'][msg.to]
                            del read['readMember'][msg.to]
                            del read['readTime'][msg.to]
                        except:
                            pass
                        read['readPoint'][msg.to] = msg.id
                        read['readMember'][msg.to] = ""
                        read['readTime'][msg.to] = datetime.now().strftime('%H:%M:%S')
                        read['ROM'][msg.to] = {}
                        with open('read.json', 'w') as fp:
                            json.dump(read, fp, sort_keys=True, indent=4)
                            line.sendMessage(msg.to, "Set reading point:\n" + readTime)
                            
                elif text.lower() == 'lurking off':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to not in read['readPoint']:
                        line.sendMessage(msg.to,"Lurking disabled")
                    else:
                        try:
                            del read['readPoint'][msg.to]
                            del read['readMember'][msg.to]
                            del read['readTime'][msg.to]
                        except:
                              pass
                        line.sendMessage(msg.to, "Delete reading point:\n" + readTime)
    
                elif text.lower() == 'lurking reset':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to in read["readPoint"]:
                        try:
                            del read["readPoint"][msg.to]
                            del read["readMember"][msg.to]
                            del read["readTime"][msg.to]
                        except:
                            pass
                        line.sendMessage(msg.to, "Reset reading point:\n" + readTime)
                    else:
                        line.sendMessage(msg.to, "Lurking belum diaktifkan ngapain di reset?")
                        
                elif text.lower() == 'lurking':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if receiver in read['readPoint']:
                        if list(read["ROM"][receiver].items()) == []:
                            line.sendMessage(receiver,"[ Reader ]:\nNone")
                        else:
                            chiya = []
                            for rom in list(read["ROM"][receiver].items()):
                                chiya.append(rom[1])
                            cmem = line.getContacts(chiya) 
                            zx = ""
                            zxc = ""
                            zx2 = []
                            xpesan = '[ *** LurkDetector *** ]:\n'
                        for x in range(len(cmem)):
                            xname = str(cmem[x].displayName)
                            pesan = ''
                            pesan2 = pesan+"@c\n"
                            xlen = str(len(zxc)+len(xpesan))
                            xlen2 = str(len(zxc)+len(pesan2)+len(xpesan)-1)
                            zx = {'S':xlen, 'E':xlen2, 'M':cmem[x].mid}
                            zx2.append(zx)
                            zxc += pesan2
                        text = xpesan+ zxc + "\n[ Lurking time ]: \n" + readTime
                        try:
                            line.sendMessage(receiver, text, contentMetadata={'MENTION':str('{"MENTIONEES":'+json.dumps(zx2).replace(' ','')+'}')}, contentType=0)
                        except Exception as error:
                            print (error)
                        pass
                    else:
                        line.sendMessage(receiver,"Lurking has not been set.")
#============================‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏±‡∏ô====‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‚óá‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ==============================================#
                elif ".‡∏£‡∏±‡∏ô @" in msg.text:
                    print ("[Command]covergroup")
                    _name = msg.text.replace(".‡∏£‡∏±‡∏ô @","")
                    _nametarget = _name.rstrip('  ')
                    gs = line.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        line.sendText(msg.to,"Contact not found")
                    else:
                        for target in targets:
                            try:
                               thisgroup = line.getGroups([msg.to])
                               Mids = [target for contact in thisgroup[0].members]
                               mi_d = Mids[:33]
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.sendText(msg.to,"‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                            except:
                                pass
                    print ("[Command]covergroup]")
                elif ".‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @" in msg.text:
                    _name = msg.text.replace(".‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @","")
                    _nametarget = _name.rstrip(' ')
                    gs = line.getGroup(msg.to)
                    for g in gs.members:
                        if _nametarget == g.displayName:
                           line.sendText(g.mid,"555555555")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû") 
                           line.sendText(g.mid,"üíû‡∏£‡∏±‡∏Å‡∏ô‡∏∞‡∏°‡πã‡∏≤‡∏ô‡πâ‡∏≠‡∏¢üíû")
                           line.sendText(msg.to, "‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß..‡∏à‡πà‡∏∞")
                           print (" Spammed !")
                elif ".‡∏£‡∏±‡∏ô: " in msg.text.lower():
                        key = msg.text[-33:]
                        line.findAndAddContactsByMid(key)                   
                        contact = line.getContact(key)
                        line.createGroup("üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ",[key])
                        line.sendText(msg,to,"üêæ—ä‡¨Æ‡©û‡∏µ‡∏µ‡™à‡Æá ‡¨Æ‡∏π “®·Äî‚ùçüêæ")
#==============================================================================#   
#~~~~~~~~~~~~~~~~~~‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÇ‡∏î‡∏¢[‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ]~~~~~~~~~~~~~~~#

              

                elif text.lower() == 'kalender':
                    tz = pytz.timezone("Asia/Makassar")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    line.sendMessage(msg.to, readTime)                 

                
                elif "instagram" in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.instagram.com/{}/?__a=1".format(search))
                        try:
                            data = json.loads(r.text)
                            ret_ = "‚ïî‚ïê‚ïê[ Profile Instagram ]"
                            ret_ += "\n‚ï† Nama : {}".format(str(data["user"]["full_name"]))
                            ret_ += "\n‚ï† Username : {}".format(str(data["user"]["username"]))
                            ret_ += "\n‚ï† Bio : {}".format(str(data["user"]["biography"]))
                            ret_ += "\n‚ï† Pengikut : {}".format(format_number(data["user"]["followed_by"]["count"]))
                            ret_ += "\n‚ï† Diikuti : {}".format(format_number(data["user"]["follows"]["count"]))
                            if data["user"]["is_verified"] == True:
                                ret_ += "\n‚ï† Verifikasi : Sudah"
                            else:
                                ret_ += "\n‚ï† Verifikasi : Belum"
                            if data["user"]["is_private"] == True:
                                ret_ += "\n‚ï† Akun Pribadi : Iya"
                            else:
                                ret_ += "\n‚ï† Akun Pribadi : Tidak"
                            ret_ += "\n‚ï† ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Post : {}".format(format_number(data["user"]["media"]["count"]))
                            ret_ += "\n‚ïö‚ïê‚ïê[ https://www.instagram.com/{} ]".format(search)
                            path = data["user"]["profile_pic_url_hd"]
                            line.sendImageWithURL(to, str(path))
                            line.sendMessage(to, str(ret_))
                        except:
                            line.sendMessage(to, "Pengguna tidak ditemukan")
                elif "fotoig" in msg.text.lower():
                    separate = msg.text.split(" ")
                    user = msg.text.replace(separate[0] + " ","")
                    profile = "https://www.instagram.com/" + user
                    with requests.session() as x:
                        x.headers['user-agent'] = 'Mozilla/5.0'
                        end_cursor = ''
                        for count in range(1):
                            print(('send foto : ', count))
                            r = x.get(profile, params={'max_id': end_cursor})                        
                            data = re.search(r'window._sharedData = (\{.+?});</script>', r.text).group(1)
                            j    = json.loads(data)                        
                            for node in j['entry_data']['ProfilePage'][0]['user']['media']['nodes']: 
                                page = 'https://www.instagram.com/p/' + node['code']
                                r = x.get(page)
                                print((node['display_src']))
                                line.sendImageWithURL(msg.to,node['display_src'])
                elif "‡∏£‡∏π‡∏õ" in msg.text.lower():
                    separate = msg.text.split(" ")
                    search = msg.text.replace(separate[0] + " ","")
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("http://rahandiapi.herokuapp.com/imageapi?key=betakey&q={}".format(urllib.parse.quote(search)))
                        data = r.text
                        data = json.loads(data)
                        if data["result"] != []:
                            items = data["result"]
                            path = random.choice(items)
                            a = items.index(path)
                            b = len(items)
                            line.sendImageWithURL(to, str(path))
                elif "anime" in msg.text.lower():
                    separate = msg.text.split(" ")
                    search = msg.text.replace(separate[0] + " ","")
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("http://rahandiapi.herokuapp.com/imageapi?key=betakey&q={}".format(urllib.parse.quote(search)))
                        data = r.text
                        data = json.loads(data)
                        if data["result"] != []:
                            items = data["result"]
                            path = random.choice(items)
                            a = items.index(path)
                            b = len(items)
                            line.sendImageWithURL(to, str(path))
                elif "‡∏¢‡∏π‡∏ó‡∏π‡∏õ" in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    params = {"search_query": search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.youtube.com/results", params = params)
                        soup = BeautifulSoup(r.content, "html.parser")
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ]"
                        datas = []
                        for data in soup.select(".yt-lockup-title > a[title]"):
                            if "&lists" not in data["href"]:
                                datas.append(data)
                        for data in datas:
                            ret_ += "\n‚ï†‚ïê‚ïê[ {} ]".format(str(data["title"]))
                            ret_ += "\n‚ï† https://www.youtube.com{}".format(str(data["href"]))
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö {} ]".format(len(datas))
                        line.sendMessage(to, str(ret_))

                elif msg.text in ["Cctv on","‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô","‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡πÅ‡∏Å‡∏ô"]:
                    try:
                        del RfuCctv['point'][msg.to]
                        del RfuCctv['sidermem'][msg.to]
                        del RfuCctv['cyduk'][msg.to]
                    except:
                        pass
                    RfuCctv['point'][msg.to] = msg.id
                    RfuCctv['sidermem'][msg.to] = ""
                    RfuCctv['cyduk'][msg.to]=True
                    line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
                elif msg.text in ["Cctv off","‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô","‡∏õ‡∏¥‡∏î‡∏™‡πÅ‡∏Å‡∏ô"]:
                    if msg.to in RfuCctv['point']:
                        RfuCctv['cyduk'][msg.to]=False
                        line.sendMessage(msg.to, RfuCctv['sidermem'][msg.to])
                    else:
                        line.sendMessage(msg.to, "‡∏õ‡∏¥‡∏î‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")

                elif text.lower() == 'selfbot off':
                    line.sendMessage(receiver, '‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢')
                    print ("Selfbot Off")
                    exit(1)

                elif text.lower() == '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô':
                    contactlist = line.getAllContactIds()
                    kontak = line.getContacts(contactlist)
                    num=1
                    msgs="üéé‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏ôüéé"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.displayName)
                        num=(num+1)
                    msgs+="\nüéé‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ôüéé\n\nTotal Teman : %i" % len(kontak)
                    line.sendMessage(msg.to, msgs)

                elif msg.text in ["‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏•‡πä‡∏≠‡∏Å"]: 
                    blockedlist = line.getBlockedContactIds()
                    kontak = line.getContacts(blockedlist)
                    num=1
                    msgs="‚ïê‚ïê‚ïê‚ïê‚ïê‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πâ‡∏≠‡∏Ñ‚ïê‚ïê‚ïê‚ïê‚ïê"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.displayName)
                        num=(num+1)
                    msgs+="\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêList Blocked‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nTotal Blocked : %i" % len(kontak)
                    line.sendMessage(receiver, msgs)

                elif msg.text in ["‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô mid"]: 
                    gruplist = line.getAllContactIds()
                    kontak = line.getContacts(gruplist)
                    num=1
                    msgs="‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêList FriendMid‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.mid)
                        num=(num+1)
                    msgs+="\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêList FriendMid‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nTotal Friend : %i" % len(kontak)
                    line.sendMessage(receiver, msgs)

                elif msg.text.lower() == '‡∏Ç‡∏≠‡∏•‡∏¥‡πâ‡∏á':
                	if msg.toType == 2:
                         g = line.getGroup(receiver)
                         line.updateGroup(g)
                         gurl = line.reissueGroupTicket(receiver)
                         line.sendMessage(receiver,"‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì\n‚ï†‚ùÇline://ti/g/" + gurl + "\n‚ï†\n‚ï†‚ùÇ ‡∏•‡∏¥‡πâ ‡∏á ‡∏Ç ‡∏≠ ‡∏á ‡∏Å ‡∏•‡∏∏‡πà ‡∏° ‡∏ô‡∏µ‡πâ \n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ")

                elif msg.text == "‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏õ‡πä":
                	line.sendMessage(receiver,">nekopoi.host\n>sexvideobokep.com\n>memek.com\n>pornktube.com\n>faketaxi.com\n>videojorok.com\n>watchmygf.mobi\n>xnxx.com\n>pornhd.com\n>xvideos.com\n>vidz7.com\n>m.xhamster.com\n>xxmovies.pro\n>youporn.com\n>pornhub.com\n>youjizz.com\n>thumzilla.com\n>anyporn.com\n>brazzers.com\n>redtube.com\n>youporn.com")

                elif msg.text.lower() == '‡∏î‡∏∂‡∏á‡πÅ‡∏≠‡∏î':
                	if msg.toType == 2:                
                           ginfo = line.getGroup(receiver)
                           try:
                               gcmid = ginfo.creator.mid
                           except:
                               gcmid = "Error"
                           if settings["lang"] == "JP":
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "Typeüëâ Invite Pembuat Group Succes")
                           else:
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "Pembuat Group Sudah di dalam")

                elif msg.text in ["/uninstall"]:
                    if msg.toType == 2:
                        ginfo = line.getGroup(receiver)
                        try:
                            line.leaveGroup(receiver)
                            ki1.leaveGroup(receiver)
                            ki2.leaveGroup(receiver)
                            ki3.leaveGroup(receiver)
                            ki4.leaveGroup(receiver)							
                        except:
                            pass

                elif msg.text in ["Tagimage on","Tag2 on","‡πÅ‡∏ó‡∏Ñ2‡πÄ‡∏õ‡∏¥‡∏î","‡πÅ‡∏ó‡∏Ñ2 ‡πÄ‡∏õ‡∏¥‡∏î","‡πÅ‡∏ó‡∏Ñ2 off","‡πÅ‡∏ó‡∏Ñ2off"]:
                        settings['potoMention'] = True
                        line.sendMessage(msg.to,"‡πÅ‡∏ó‡∏Ñ2‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß")
                
                elif msg.text in ["Tagimage off","Tag2 off","‡πÅ‡∏ó‡∏Ñ2‡∏õ‡∏¥‡∏î","‡πÅ‡∏ó‡∏Ñ2 ‡∏õ‡∏¥‡∏î","‡πÅ‡∏ó‡∏Ñ2 off","‡πÅ‡∏ó‡∏Ñ2off"]:
                        settings['potoMention'] = False
                        line.sendMessage(msg.to,"‡πÅ‡∏ó‡∏Ñ2‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß")

                elif msg.text in ["Respontag on","Tag on","My respon on","Respon:on","‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏õ‡∏¥‡∏î","‡πÅ‡∏ó‡∏Ñon"]:
                    settings["detectMention"] = True
                    line.sendMessage(msg.to,"‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß..")
                
                elif msg.text in ["Respontag off","Tag off","My respon off","Respon:off","‡πÅ‡∏ó‡∏Ñ‡∏õ‡∏¥‡∏î","‡πÅ‡∏ó‡∏Ñoff"]:
                    settings["detectMention"] = False
                    line.sendMessage(msg.to,"‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß..")

                elif msg.text.lower().startswith("textig "):
                    sep = msg.text.split(" ")
                    textnya = msg.text.replace(sep[0] + " ","")
                    urlnya = "http://chart.apis.google.com/chart?chs=480x80&cht=p3&chtt=" + textnya + "&chts=FFFFFF,70&chf=bg,s,000000"
                    line.sendImageWithURL(msg.to, urlnya)

                elif "kedip " in msg.text:
                    txt = msg.text.replace("kedip ", "")
                    t1 = "\xf4\x80\xb0\x82\xf4\x80\xb0\x82\xf4\x80\xb0\x82\xf4\x80\xb0\x82\xf4\x80\xa0\x81\xf4\x80\xa0\x81\xf4\x80\xa0\x81"
                    t2 = "\xf4\x80\x82\xb3\xf4\x8f\xbf\xbf"
                    line.sendMessage(msg.to, t1 + txt + t2)						
                elif msg.text in ["1‡∏•‡∏ö‡∏™‡∏¥‡∏£‡∏¥"]:
                    if msg.toType == 2:
                        print("Kick Siri")
                        x = ki1.getGroup(msg.to)
                        if ki1MID in [i.mid for i in x.members]:
                            sirilist = [i.mid for i in x.members if any(word in i.displayName for word in ["Doctor.A","Eliza","Parry","Rakko","„Åó„Çä„Å°„ÇÉ„Çì"]) or i.displayName.isdigit()]
                            if sirilist == []:
                                ki1.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏£‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°.")
                            for target in sirilist:
                                try:
                                    ki1.kickoutFromGroup(msg.to,[target])
                                except:
                                    pass
										
                elif msg.text in ["2‡∏•‡∏ö‡∏™‡∏¥‡∏£‡∏¥"]:
                    if msg.toType == 2:
                        print("Kick Siri")
                        x = ki2.getGroup(msg.to)
                        if ki2MID in [i.mid for i in x.members]:
                            sirilist = [i.mid for i in x.members if any(word in i.displayName for word in ["Doctor.A","Eliza","Parry","Rakko","„Åó„Çä„Å°„ÇÉ„Çì"]) or i.displayName.isdigit()]
                            if sirilist == []:
                                ki2.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏£‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°.")
                            for target in sirilist:
                                try:
                                    k2.kickoutFromGroup(msg.to,[target])
                                except:
                                    pass
                elif msg.text in ["3‡∏•‡∏ö‡∏™‡∏¥‡∏£‡∏¥"]:
                    if msg.toType == 2:
                        print("Kick Siri")
                        x = ki3.getGroup(msg.to)
                        if ki4MID in [i.mid for i in x.members]:
                            sirilist = [i.mid for i in x.members if any(word in i.displayName for word in ["Doctor.A","Eliza","Parry","Rakko","„Åó„Çä„Å°„ÇÉ„Çì"]) or i.displayName.isdigit()]
                            if sirilist == []:
                                ki3.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏£‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°.")
                            for target in sirilist:
                                try:
                                    ki3.kickoutFromGroup(msg.to,[target])
                                except:
                                    pass
                elif msg.text in ["4‡∏•‡∏ö‡∏™‡∏¥‡∏£‡∏¥"]:
                    if msg.toType == 2:
                        print("Kick Siri")
                        x = ki4.getGroup(msg.to)
                        if ki4MID in [i.mid for i in x.members]:
                            sirilist = [i.mid for i in x.members if any(word in i.displayName for word in ["Doctor.A","Eliza","Parry","Rakko","„Åó„Çä„Å°„ÇÉ„Çì"]) or i.displayName.isdigit()]
                            if sirilist == []:
                                ki4.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏£‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°.")
                            for target in sirilist:
                                try:
                                    ki4.kickoutFromGroup(msg.to,[target])
                                except:
                                    pass									
                elif msg.text in ["Inviteuser"]:
                        settings["winvite"] = True
                        line.sendMessage(msg.to,"send a contact to invite user")                            
                elif msg.text.lower() == ".invitecancel":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            line.cancelGroupInvitation(msg.to,[i])
                elif msg.text.lower() == ".invitecancel2":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            random.choice(Exc).cancelGroupInvitation(msg.to,[i])
                elif msg.text.lower() == "‡πÄ‡∏ß‡∏•‡∏≤":
                    line.sendMessage(msg.to,(str(datetime.datetime.now() - start_runtime)[:-7].split(" days, ")[0]+" ‡∏ß‡∏±‡∏ô "+str(datetime.datetime.now() - start_runtime)[:-7].split(" days, ")[1].split(":")[0]+" ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á " if "days" in str(datetime.datetime.now() - start_runtime) else str(datetime.datetime.now() - start_runtime)[:-7].split(" day, ")[0]+" ‡∏ß‡∏±‡∏ô "+str(datetime.datetime.now() - start_runtime)[:-7].split(" day, ")[1].split(":")[0]+" ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á " if "day" in str(datetime.datetime.now() - start_runtime) else str(datetime.datetime.now() - start_runtime)[:-7].split(":")[0]+" ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ")+str(datetime.datetime.now() - start_runtime)[:-7].split(":")[1]+" ‡∏ô‡∏≤‡∏ó‡∏µ "+str(datetime.datetime.now() - start_runtime)[:-7].split(":")[2]+" ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
#=============COMMAND KICKER===========================#
                elif msg.text in ["‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥"]:
                    settings["blacklist"] = {}
                    line.sendMessage(msg.to,"‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏£‡πâ‡∏≠‡∏¢")
                    print ("Clear Ban")

                elif text.lower() == "‡∏°‡∏≤‡∏´‡∏≠‡∏¢":
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        group.preventedJoinByTicket = False
                        line.updateGroup(group)
                        invsend = 0
                        ticket = line.reissueGroupTicket(to)
                        ki1.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki2.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki3.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki4.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki5.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki6.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki7.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki8.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki9.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ki10.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        group.preventedJoinByTicket = True
                        line.updateGroup(group)
                        print ("‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡πâ‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á")

                elif 'kick' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               random.choice(Rfu).kickoutFromGroup(msg.to,[target])      
                               print ("Rfu kick User")
                           except:
                               random.choice(Rfu).sendMessage(msg.to,"‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö üò´")

                elif 'kill' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               line.kickoutFromGroup(msg.to,[target])             
                               print ("Sb Kick User")
                           except:
                               line.sendMessage(msg.to,"Limit kaka üò´")                               

                elif 'k1 kick' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki1.kickoutFromGroup(msg.to,[target])           
                               print ("K1 Kick User")
                           except:
                               ki1.sendMessage(msg.to,"Limit kaka üò´")                               

                elif 'k2 kick' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki2.kickoutFromGroup(msg.to,[target])
                               print ("K2 kick user")
                           except:
                               ki2.sendMessage(msg.to,"Limit kaka üò´")                              

                elif 'k3 kick' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki3.kickoutFromGroup(msg.to,[target])
                               print ("K3 kick user")
                           except:
                               ki3.sendMessage(msg.to,"Limit kaka üò´")                              

                elif 'k4 kick' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki4.kickoutFromGroup(msg.to,[target])
                               print ("K3 kick user")
                           except:
                               ki4.sendMessage(msg.to,"Limit kaka üò´")                              
                               
                elif 'invite' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               line.inviteIntoGroup(msg.to,[target])
                               line.sendMessage(receiver, "Typeüëâ Invite Succes")
                           except:
                               line.sendMessage(msg.to,"Typeüëâ Limit Invite")

                elif 'k1 invite' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki1.inviteIntoGroup(msg.to,[target])
                               ki1.sendMessage(receiver, "Typeüëâ Invite Succes")
                               print ("R1 invite User")
                           except:
                               ki1.sendMessage(msg.to,"Typeüëâ Limit Invite")                               

                elif 'k2 inv' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki2.inviteIntoGroup(msg.to,[target])
                               ki2.sendMessage(receiver, "Typeüëâ Invite Succes")
                               ("R2 invite User")
                           except:
                               ki2.sendMessage(msg.to,"Typeüëâ Limit Invite")                               

                elif 'k3 getinvite' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki3.inviteIntoGroup(msg.to,[target])
                               ki3.sendMessage(receiver, "Typeüëâ Invite Succes")
                               ("R3 invite User")
                           except:
                               ki3.sendMessage(msg.to,"Typeüëâ Limit Invite")                               

                elif 'k4 getinvite' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki4.inviteIntoGroup(msg.to,[target])
                               ki4.sendMessage(receiver, "Typeüëâ Invite Succes")
                               ("R4 invite User")
                           except:
                               ki4.sendMessage(msg.to,"Typeüëâ Limit Invite")                               

                elif "‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥" in msg.text:
                	if msg.toType == 2:
                         _name = msg.text.replace("Cleanse","")
                         gs = line.getGroup(receiver)
                         line.sendMessage(receiver,"Just some casual cleansing √¥")
                         targets = []
                         for g in gs.members:
                             if _name in g.displayName:
                                 targets.append(g.mid)
                         if targets == []:
                             line.sendMessage(receiver,"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤‡∏ö‡∏±‡∏ô‡∏ä‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏ö‡∏±‡∏Ñ  (‚ó°‚Äø‚ó°‚úø) ")
                         else:
                             for target in targets:
                             	if not target in Rfu:
                                     try:
                                         klist=[line,ki1,ki2,ki3,ki4,ki5,ki6,ki7,ki8,ki9,ki10]
                                         kicker=random.choice(klist)
                                         kicker.kickoutFromGroup(receiver,[target])
                                         print((receiver,[g.mid]))
                                     except:
                                         line.sendMessage(receiver,"‡∏•‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                                         print ("Cleanse Group")

                elif msg.text in ["‡πÑ‡∏•‡πà‡∏î‡∏≥"]:
                	if msg.toType == 2:
                         group = line.getGroup(receiver)
                         gMembMids = [contact.mid for contact in group.members]
                         matched_list = []
                         for tag in settings["blacklist"]:
                             matched_list+=[str for str in gMembMids if str == tag]
                         if matched_list == []:
                             line.sendMessage(receiver,"Nots in Blacklist")
                         else:
                             for jj in matched_list:
                                 try:
                                     klist=[line,ki1,ki2,ki3,ki4,ki5,ki6,ki7,ki8,ki9,ki10]
                                     kicker=random.choice(klist)
                                     kicker.kickoutFromGroup(receiver,[jj])
                                     print((receiver,[jj]))
                                 except:
                                     line.sendMessage(receiver,"sorry bl ke cyduk")
                                     print ("Blacklist di Kick")

                elif text.lower() == "‡∏•‡∏ö‡πÅ‡∏ä‡∏ó":
                        if msg._from in Family:
                            try:
                                ki1.removeAllMessages(op.param2)
                                ki2.removeAllMessages(op.param2)
                                ki3.removeAllMessages(op.param2)
                                ki4.removeAllMessages(op.param2)
                                ki5.removeAllMessages(op.param2)
                                ki6.removeAllMessages(op.param2)
                                ki7.removeAllMessages(op.param2)
                                ki8.removeAllMessages(op.param2)
                                ki9.removeAllMessages(op.param2)
                                ki10.removeAllMessages(op.param2)
                                line.removeAllMessages(op.param2) 
                                line.sendMessage(msg.to,"‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡πÅ‡∏ä‡∏ó.")
                            except:
                                pass
                                print ("Remove Chat Kicker")

                elif text.lower() == "‡∏´‡∏ô‡∏µ‡∏´‡∏≠‡∏¢":
                    if msg._from in Family:
                        ki1.leaveGroup(msg.to)
                        ki2.leaveGroup(msg.to)
                        ki3.leaveGroup(msg.to)
                        ki4.leaveGroup(msg.to)
                        ki5.leaveGroup(msg.to)
                        ki6.leaveGroup(msg.to)
                        ki7.leaveGroup(msg.to)
                        ki8.leaveGroup(msg.to)
                        ki9.leaveGroup(msg.to)
                        ki10.leaveGroup(msg.to)
                        print ("‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡πâ‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°")

                elif text.lower() == "leaveall":
                    if msg._from in Family:
                        gid = line.getGroupIdsJoined()
                        for i in gid:
                            ki1.leaveGroup(i)
                            ki2.leaveGroup(i)
                            ki3.leaveGroup(i)
                            ki4.leaveGroup(i) 
                            print ("Kicker Leave All group")

                elif "‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = line.getProfile()
                        profile_A.displayName = string
                        line.updateProfile(profile_A)
                        line.sendMessage(msg.to,"Update to " + string)
                        print ("Update Name")

                elif "‡∏ï‡∏±‡∏™‡πÉ‡∏´‡∏°‡πà: " in msg.text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = line.getProfile()
                        profile_A.statusMessage = string
                        line.updateProfile(profile_A)
                        line.sendMessage(msg.to,"Succes Update üëâ " + string)
                        print ("Update Bio Succes")
#~~~~~~~~~~~~~~~~~‡∏ï‡∏±‡∏™~~‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‚óá‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ~~~~~~~~~~~~~~#

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å1: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki1.getProfile()
                        profile_A.displayName = string
                        ki1.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki1.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å2: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki2.getProfile()
                        profile_A.displayName = string
                        ki1.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki2.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å3: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki3.getProfile()
                        profile_A.displayName = string
                        ki3.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki3.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å4: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki4.getProfile()
                        profile_A.displayName = string
                        ki4.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki4.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å5: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki5.getProfile()
                        profile_A.displayName = string
                        ki5.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki5.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")


                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å6: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki6.getProfile()
                        profile_A.displayName = string
                        ki6.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki6.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å7: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki7.getProfile()
                        profile_A.displayName = string
                        ki7.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki7.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å8: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki8.getProfile()
                        profile_A.displayName = string
                        ki8.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki8.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å9: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki9.getProfile()
                        profile_A.displayName = string
                        ki9.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki9.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")
			

                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å10: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki10.getProfile()
                        profile_A.displayName = string
                        ki10.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô " + string)
                        ki10.sendMessage(msg.to,"‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏Ç‡πà‡∏≠‡∏¢‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà(‚ó°‚Äø‚ó°‚úø) ")
                        print ("Update Name")

#~~~~~~~~~~~~~~~~~~~‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‚óá‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ~~~~~~~~~~~~~~#
                elif "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki1.getProfile()
                        profile_B = ki2.getProfile()
                        profile_C = ki3.getProfile()
                        profile_D = ki4.getProfile()
                        profile_E = ki5.getProfile()
                        profile_F = ki6.getProfile()
                        profile_G = ki7.getProfile()
                        profile_H = ki8.getProfile()
                        profile_I = ki9.getProfile()
                        profile_J = ki10.getProfile()
                        profile_A.displayName = string
                        profile_B.displayName = string
                        profile_C.displayName = string
                        profile_D.displayName = string
                        profile_E.displayName = string
                        profile_F.displayName = string
                        profile_G.displayName = string
                        profile_H.displayName = string
                        profile_I.displayName = string
                        profile_J.displayName = string
                        ki.updateProfile(profile_A)
                        kk.updateProfile(profile_B)
                        kc.updateProfile(profile_C)
                        ke.updateProfile(profile_D) 
                        ki.updateProfile(profile_E)
                        kk.updateProfile(profile_F)
                        kc.updateProfile(profile_G)
                        ke.updateProfile(profile_H) 
                        ki.updateProfile(profile_I)
                        kk.updateProfile(profile_J)
                        line.sendMessage(msg.to,"Update Name All Kicker to : " + string)
                        print ("Update Name All Kicker")

                elif "‡∏ï‡∏±‡∏™‡∏Ñ‡∏¥‡∏Å: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(": ")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = ki1.getProfile()
                        profile_B = ki2.getProfile()
                        profile_C = ki3.getProfile()
                        profile_D = ki4.getProfile()  
                        profile_E = ki5.getProfile()
                        profile_F = ki6.getProfile()
                        profile_G = ki7.getProfile()
                        profile_H = ki8.getProfile()  
                        profile_I = ki9.getProfile()
                        profile_J = ki10.getProfile()
                        profile_A.statusMessage = string
                        profile_B.statusMessage = string
                        profile_C.statusMessage = string
                        profile_D.statusMessage = string
                        profile_E.statusMessage = string
                        profile_F.statusMessage = string
                        profile_G.statusMessage = string
                        profile_H.statusMessage = string
                        profile_I.statusMessage = string
                        profile_J.statusMessage = string
                        ki1.updateProfile(profile_A)
                        ki2.updateProfile(profile_B)
                        ki3.updateProfile(profile_C)
                        ki4.updateProfile(profile_D)
                        ki5.updateProfile(profile_E)
                        ki6.updateProfile(profile_F)
                        ki7.updateProfile(profile_G)
                        ki8.updateProfile(profile_H)
                        ki9.updateProfile(profile_I)
                        ki10.updateProfile(profile_J)
                        line.sendMessage(msg.to,"Update Bio All Kicker to : " + string)
                        print ("Update Bio All Kicker")

                elif text.lower() == "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô":
                    if msg._from in Family:
                        profile = ki1.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki1.sendMessage(to, text)                                
                        profile = ki2.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki2.sendMessage(to, text)                                
                        profile = ki3.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki3.sendMessage(to, text)
                        profile = ki4.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki4.sendMessage(to, text)                                
                        profile = ki5.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki5.sendMessage(to, text)                                
                        profile = ki6.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki6.sendMessage(to, text)
                        profile = ki7.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki7.sendMessage(to, text)
                        profile = ki8.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki8.sendMessage(to, text)                                
                        profile = ki9.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki9.sendMessage(to, text)                                
                        profile = ki10.getProfile()
                        text = profile.displayName + "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß\n‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡πà‡∏∞ (‚ó°‚Äø‚ó°‚úø) "
                        ki10.sendMessage(to, text)
                        print ("Kicker Respon")

                elif msg.text in ["‡∏ö‡∏≠‡∏ó"]:
                    ki1.sendMessage(msg.to,"1(‚äô_‚äô)")
                    ki2.sendMessage(msg.to,"2(‚äô_‚äô)")
                    ki3.sendMessage(msg.to,"3(‚äô_‚äô)")
                    ki4.sendMessage(msg.to,"4(‚äô_‚äô)")   
                    ki5.sendMessage(msg.to,"5(‚äô_‚äô)")
                    ki6.sendMessage(msg.to,"6(‚äô_‚äô)")
                    ki7.sendMessage(msg.to,"5(‚äô_‚äô)")
                    ki8.sendMessage(msg.to,"8(‚äô_‚äô)") 
                    ki9.sendMessage(msg.to,"9(‚äô_‚äô)")
                    ki10.sendMessage(msg.to,"10(‚äô_‚äô)")
                elif msg.text.lower().startswith("bitcoin"):
                   search = msg.text.split("bitcoin")
                   with requests.session() as web:
                       web.headers["User-Agent"] = random.choice(settings["userAgent"])
                       url = "https://xeonwz.herokuapp.com/bitcoin.api"
                       r = web.get(url)
                       data=r.text
                       data=json.loads(data)
                       print(data)
                       hasil = "„Äå Bitcoin Result „Äç"
                       hasil += "\nPrice : " +str(data["btc"])                                
                       hasil += "\nExpensive : " +str(data["high"])
                       hasil += "\nCheap : " +str(data["low"])               
                       line.sendMessage(to, str(hasil))
#=============COMMAND PROTECT=========================#
                elif msg.text.lower() == 'Protect on':
                    if RfuProtect["protect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                    else:
                        RfuProtect["protect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")

                elif msg.text.lower() == 'Protect off':
                    if RfuProtect["protect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                    else:
                        RfuProtect["protect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")

                elif msg.text.lower() == 'cancel pro on':
                    if RfuProtect["cancelprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["cancelprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == 'cancel pro off':
                    if RfuProtect["cancelprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["cancelprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == 'invit pro on':
                    if RfuProtect["inviteprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["inviteprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == 'invit pro off':
                    if RfuProtect["inviteprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["inviteprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == 'link pro on':
                    if RfuProtect["linkprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                    else:
                        RfuProtect["linkprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")

                elif msg.text.lower() == 'link pro off':
                    if RfuProtect["linkprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                    else:
                        RfuProtect["linkprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")

                elif msg.text.lower() == 'guest pro on':
                    if RfuProtect["Protectguest"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                    else:
                        RfuProtect["Protectguest"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")

                elif msg.text.lower() == 'guest pro off':
                    if RfuProtect["Protectguest"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                    else:
                        RfuProtect["Protectguest"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")

                elif msg.text.lower() == 'join pro on':
                    if RfuProtect["Protectjoin"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                    else:
                        RfuProtect["Protectjoin"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")

                elif msg.text.lower() == 'join pro off':
                    if RfuProtect["Protectjoin"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                    else:
                        RfuProtect["Protectjoin"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")

                elif msg.text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô':
                    if RfuProtect["inviteprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‚ú∞‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                        else:
                            line.sendMessage(msg.to,"‚ú∞‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                    else:
                        RfuProtect["inviteprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["cancelprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    else:
                        RfuProtect["cancelprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["protect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    else:
                        RfuProtect["protect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                    if RfuProtect["linkprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                    else:
                        RfuProtect["linkprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                    if RfuProtect["Protectguest"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectguest"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    if RfuProtect["Protectjoin"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectjoin"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô':
                    if RfuProtect["inviteprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‚ú∞‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                        else:
                            line.sendMessage(msg.to,"‚ú∞‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                    else:
                        RfuProtect["inviteprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["cancelprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    else:
                        RfuProtect["cancelprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["protect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                    else:
                        RfuProtect["protect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                    if RfuProtect["linkprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                    else:
                        RfuProtect["linkprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                    if RfuProtect["Protectguest"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectguest"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    if RfuProtect["Protectjoin"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectjoin"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")

#==============FINNISHING PROTECT========================#
                elif msg.text.lower() == '‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡πÄ‡∏õ‡∏¥‡∏î':
                        if settings["Wc"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   .")
                        else:
                            settings["Wc"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                elif msg.text.lower() == '‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏õ‡∏¥‡∏î':
                        if settings["Wc"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                        else:
                            settings["Wc"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   ")

                elif msg.text.lower() == '‡∏≠‡∏≠‡∏Å ‡πÄ‡∏õ‡∏¥‡∏î':
                        if settings["Lv"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                        else:
                            settings["Lv"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                elif msg.text.lower() == '‡∏≠‡∏≠‡∏Å ‡∏õ‡∏¥‡∏î':
                        if settings["Lv"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                        else:
                            settings["Lv"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")

                elif msg.text in ["Tag1","Tag1"]:
                   line.sendMessage(msg.to,"‚ù•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠\n\n" + str(settings["tag1"]))

                elif msg.text in ["Tag2","Tag2"]:
                   line.sendMessage(msg.to,"‚ù•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠\n\n" + str(settings["tag2"]))

                elif "Tag1:" in msg.text:
                      settings["tag1"] = msg.text.replace("Tag1: ","")
                      line.sendMessage(msg.to,"‚ù•‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ‡πÅ‡∏•‡πâ‡∏ß")

                elif "Tag2:" in msg.text:
                      settings["tag2"] = msg.text.replace("Tag2: ","")
                      line.sendMessage(msg.to,"‚ù•‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ‡πÅ‡∏•‡πâ‡∏ß")

                elif "Tx1:" in msg.text:
                      settings["KIEBOT1"] = msg.text.replace("Tx1: ","")
                      line.sendMessage(msg.to,"‚ù•‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")

                elif "Tx2:" in msg.text:
                      settings["KIEBOT2"] = msg.text.replace("Tx2: ","")
                      line.sendMessage(msg.to,"‚ù•‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß")

                elif msg.text in ["Tx1","Tx1"]:
                   line.sendMessage(msg.to,"‚ù•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠\n\n" + str(settings["KIEBOT1"]))

                elif msg.text in ["Tx2","Tx2"]:
                   line.sendMessage(msg.to,"‚ù•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠\n\n" + str(settings["KIEBOT2"]))                                                
#====================================================
                      
                elif msg.text.lower() == '‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞ ‡πÄ‡∏õ‡∏¥‡∏î':
                        if settings["Nk"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°...")
                        else:
                            settings["Nk"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°...")
                                
                elif msg.text.lower() == '‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞ ‡∏õ‡∏¥‡∏î':
                        if settings["Nk"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß..")
                        else:
                            settings["Nk"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß...")

#==============================================================================#   
                elif "‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° " in msg.text:
                    bctxt = msg.text.replace(".‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° ", "")
                    bc = ("‡πÄ‡∏ä‡∏•...‡∏ö‡∏≠‡∏ó..‡∏ô‡πâ‡∏≠‡∏á‡∏™‡∏∏..‡∏ö‡∏≤‡∏¢")
                    cb = (bctxt + bc)
                    tts = gTTS(cb, lang='th', slow=False)
                    tts.save('tts.mp3')
                    n = line.getGroupIdsJoined()
                    for manusia in n:
                        line.sendAudio(manusia, 'tts.mp3')

                elif "‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏ä‡∏ó " in msg.text:
                    bctxt = msg.text.replace(".‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏ä‡∏ó ", "")
                    bc = ("‡πÄ‡∏ä‡∏•‡∏ö‡∏≠‡∏ó‡∏ô‡πâ‡∏≠‡∏á‡∏™‡∏∏..‡∏ö‡∏≤‡∏¢")
                    cb = (bctxt + bc)
                    tts = gTTS(cb, lang='th', slow=False)
                    tts.save('tts.mp3')
                    n = line.getAllContactIdsJoined()
                    for manusia in n:
                        line.sendAudio(manusia, 'tts.mp3')   
	
                elif msg.text in ["‡∏ó‡∏±‡∏Å‡πÄ‡∏à‡πá‡∏ö ‡πÄ‡∏õ‡∏¥‡∏î"]:
                    settings["kickMention"] = True
                    line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡πá‡∏Å")
                
                elif msg.text in ["‡∏ó‡∏±‡∏Å‡πÄ‡∏à‡πá‡∏ö ‡∏õ‡∏¥‡∏î"]:
                    settings["kickMention"] = False
                    line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡πá‡∏Å")
                    
                    
                elif '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                         settings["message"] = spl
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡πÇ‡∏ï‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl)))
                         
                elif '‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                         settings["comment"] = spl
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl))) 
                    
                
                elif '‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏ô‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                          settings["kick"] = spl
                          line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß\n‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl)))

                	
                elif msg.text in ["‡∏î‡∏∂‡∏á"]:
                        settings["winvite"] = True
                        line.sendMessage(msg.to,"send a contact to invite user")                            
                elif msg.text.lower() == "‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ô":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            line.cancelGroupInvitation(msg.to,[i])
                elif msg.text.lower() == "‡∏ö‡∏≠‡∏ó‡∏¢‡∏Å":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            random.choice(Exc).cancelGroupInvitation(msg.to,[i])
#=============COMMAND KICKER===========================#
                
#====================================================
                elif text.lower() == '‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô':
                    gs = line.getGroup(to)
                    targets = []
                    for g in gs.members:
                        if g.displayName in "":
                            targets.append(g.mid)
                    if targets == []:
                        line.sendMessage(to, "‡πÅ‡∏ô‡πä‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")
                    else:
                        mc = ""
                        for target in targets:
                            mc += sendMessageWithMention(to,target) + "\n"
                        line.sendMessage(to, mc)
                elif text.lower() == 'zm':
                    gs = line.getGroup(to)
                    lists = []
                    for g in gs.members:
                        if g.displayName in "":
                            lists.append(g.mid)
                    if lists == []:
                        line.sendMessage(to, "‡πÑ‡∏°‡πà‡∏°‡∏µmid‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô")
                    else:
                        mc = ""
                        for mi_d in lists:
                            mc += "->" + mi_d + "\n"
                        line.sendMessage(to,mc)                   
                elif text.lower() == 'zc':
                    gs = line.getGroup(to)
                    lists = []
                    for g in gs.members:
                        if g.displayName in "":
                            lists.append(g.mid)
                    if lists == []:
                        line.sendMessage(to, "‡πÅ‡∏ô‡πä‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")
                    else:
                        for ls in lists:
                            contact = line.getContact(ls)
                            mi_d = contact.mid
                            line.sendContact(to, mi_d)
#===========‚â†==========================================#
                elif "‡∏à‡∏±‡∏î " in msg.text:
                        vkick0 = msg.text.replace("‡∏à‡∏±‡∏î ","")
                        vkick1 = vkick0.rstrip()
                        vkick2 = vkick1.replace("@","")
                        vkick3 = vkick2.rstrip()
                        _name = vkick3
                        gs = line.getGroup(msg.to)
                        targets = []
                        for s in gs.members:
                            if _name in s.displayName:
                                targets.append(s.mid)
                        if targets == []:
                            pass
                        else:
                            for target in targets:
                                try:
                                    line.kickoutFromGroup(msg.to,[target])
                                    line.findAndAddContactsByMid(target)
                                    line.inviteIntoGroup(msg.to,[target])
                                    line.cancelGroupInvitation(msg.to,[target])
                                except:
                                    pass       
#===========‚â†=================‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‚óá‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ=========================#
                elif text.lower() == '‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å':
                    gid = ki1.getGroupIdsInvited()
                    gid = ki2.getGroupIdsInvited()
                    gid = ki3.getGroupIdsInvited()
                    gid = ki4.getGroupIdsInvited()
                    gid = ki5.getGroupIdsInvited()
                    gid = ki6.getGroupIdsInvited()
                    gid = ki7.getGroupIdsInvited() 
                    gid = ki8.getGroupIdsInvited()
                    gid = ki9.getGroupIdsInvited()
                    gid = ki10.getGroupIdsInvited()
                    start = time.time()
                    for i in gid:
                        ki1.rejectGroupInvitation(i)
                        ki2.rejectGroupInvitation(i)
                        ki3.rejectGroupInvitation(i)
                        ki4.rejectGroupInvitation(i)
                        ki5.rejectGroupInvitation(i)
                        ki6.rejectGroupInvitation(i)
                        ki7.rejectGroupInvitation(i)
                        ki8.rejectGroupInvitation(i)
                        ki9.rejectGroupInvitation(i)
                        ki10.rejectGroupInvitation(i)
                    elapsed_time = time.time() - start
                    ki1.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki1.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki2.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki2.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki3.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki3.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))	
                    ki4.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki4.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki5.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki5.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki6.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki6.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki7.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki7.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki8.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki8.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki9.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki9.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ki10.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki10.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))

#===========‚â†===============‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‚óá‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ===========================#       
                elif text.lower() == '‡∏•‡∏ö‡∏£‡∏±‡∏ô':
                    gid = line.getGroupIdsInvited()
                    start = time.time()
                    for i in gid:
                        line.rejectGroupInvitation(i)
                    elapsed_time = time.time() - start
                    line.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    line.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))								
			
#~~~~~~~~~~~~~~~~~~~‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‚óá‚îÄ‚Ä¢€û‚úü‚Ñì‚Ñì‡ÆÜ’Å„ÇÜ‡∫∏€û‚Ä¢‚îÄ~~~~~~~~~~~~~~#					
                elif "Allban" in msg.text:
                  if msg._from in Family:
                      if msg.toType == 2:
                           print ("All Banlist")
                           _name = msg.text.replace("Allban","")
                           gs = line.getGroup(msg.to)
                           line.sendMessage(msg.to,"Banned all")
                           targets = []
                           for g in gs.members:
                               if _name in g.displayName:
                                    targets.append(g.mid)
                           if targets == []:
                                line.sendMessage(msg.to,"Maaf")
                           else:
                               for target in targets:
                                   if not target in Family:
                                       try:
                                           settings["blacklist"][target] = True
                                           f=codecs.open('st2__b.json','w','utf-8')
                                           json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                       except:
                                           line.sentMessage(msg.to,"All members has been added ban.")
										   
                elif 'ban' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               settings["blacklist"][target] = True
                               f=codecs.open('st2__b.json','w','utf-8')
                               json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                               line.sendMessage(msg.to,"Succes added for the blacklist ")
                               print ("Banned User")
                           except:
                               line.sendMessage(msg.to,"Contact Not Found")

                elif 'unban' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               del settings["blacklist"][target]
                               f=codecs.open('st2__b.json','w','utf-8')
                               json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                               line.sendMessage(msg.to,"Succes unban from the blacklist. ")
                               print ("Unbanned User")
                           except:
                               line.sendMessage(msg.to,"Contact Not Found")

            
                elif msg.text in ["‡πÄ‡∏ä‡πá‡∏Ñ‡∏î‡∏≥"]:
                  if msg._from in Family:
                    if settings["blacklist"] == {}:
                        line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏û‡∏ö") 
                    else:
                        line.sendMessage(msg.to,"‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏î‡∏≥")
                        mc = "Blacklist User\n"
                        for mi_d in settings["blacklist"]:
                            mc += "[‚àö] " + line.getContact(mi_d).displayName + " \n"
                        line.sendMessage(msg.to, mc + "")

                elif msg.text in ["Ban","‡∏î‡∏≥"]:
                    settings["wblacklist"] = True
                    line.sendMessage(msg.to,"send contact to ban")
                
                elif msg.text in ["Unban","‡∏Ç‡∏≤‡∏ß"]:
                    settings["dblacklist"] = True
                    line.sendMessage(msg.to,"send contact to ban")    

                elif msg.text.lower().startswith("urban "):
                    sep = msg.text.split(" ")
                    judul = msg.text.replace(sep[0] + " ","")
                    url = "http://api.urbandictionary.com/v0/define?term="+str(judul)
                    with requests.session() as s:
                        s.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = s.get(url)
                        data = r.text
                        data = json.loads(data)
                        y = "[ Result Urban ]"
                        y += "\nTags: "+ data["tags"][0]
                        y += ","+ data["tags"][1]
                        y += ","+ data["tags"][2]
                        y += ","+ data["tags"][3]
                        y += ","+ data["tags"][4]
                        y += ","+ data["tags"][5]
                        y += ","+ data["tags"][6]
                        y += ","+ data["tags"][7]
                        y += "\n[1]\nAuthor: "+str(data["list"][0]["author"])
                        y += "\nWord: "+str(data["list"][0]["word"])
                        y += "\nLink: "+str(data["list"][0]["permalink"])
                        y += "\nDefinition: "+str(data["list"][0]["definition"])
                        y += "\nExample: "+str(data["list"][0]["example"])
                        line.sendMessage(to, str(y))
            elif msg.contentType == 7:
                if settings["checkSticker"] == True:
                    stk_id = msg.contentMetadata['STKID']
                    stk_ver = msg.contentMetadata['STKVER']
                    pkg_id = msg.contentMetadata['STKPKGID']
                    ret_ = "‚ïî‚ïê‚ïê[ Sticker Info ]"
                    ret_ += "\n‚ï† STICKER ID : {}".format(stk_id)
                    ret_ += "\n‚ï† STICKER PACKAGES ID : {}".format(pkg_id)
                    ret_ += "\n‚ï† STICKER VERSION : {}".format(stk_ver)
                    ret_ += "\n‚ï† STICKER URL : line://shop/detail/{}".format(pkg_id)
                    ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    line.sendMessage(to, str(ret_))
#==============================================================================#
        if op.type == 19:
          if op.param2 in Family:
            pass
          if op.param2 in RfuBot:
          	pass
          else:
            if op.param3 in lineMID:
              if op.param2 not in Family:
                try:
                  G = ki1.getGroup(op.param1)
                  G = ki2.getGroup(op.param1)
                  ki1.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki2.updateGroup(G)
                  ticket = ki2.reissueGroupTicket(op.param1)
                  line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  G.preventedJoinByTicket = True
                  line.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1)
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)

            if op.param3 in ki1MID:
              if op.param2 not in Family:
                try:
                  G = ki2.getGroup(op.param1)
                  G = ki3.getGroup(op.param1)
                  ki2.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki3.updateGroup(G)
                  ticket = ki3.reissueGroupTicket(op.param1)
                  ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)                  
                  G.preventedJoinByTicket = True
                  kk.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki2.updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01) 
                  ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)  
                  G.preventedJoinByTicket = True
                  ki.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                  
            if op.param3 in ki2MID:
              if op.param2 not in Family:
                try:
                  G = ki3.getGroup(op.param1)
                  G = ki1.getGroup(op.param1)
                  ki3.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki3.updateGroup(G)
                  ticket = ki1.reissueGroupTicket(op.param1)
                  ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki2.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1)
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                  
            if op.param3 in ki3MID:
              if op.param2 not in Family:
                try:
                  G = ki2.getGroup(op.param1)
                  G = ki4.getGroup(op.param1)
                  ki1.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki1.updateGroup(G)
                  ticket = ki1.reissueGroupTicket(op.param1)
                  ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki3.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)

            if op.param3 in ki4MID:
              if op.param2 not in Family:
                try:
                  G = ki1.getGroup(op.param1)
                  G = ki3.getGroup(op.param1)
                  ki1.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki1.updateGroup(G)
                  ticket = ki1.reissueGroupTicket(op.param1)
                  ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki4.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)                  

			                  
            if op.param3 in ki5MID:
              if op.param2 not in Family:
                try:
                  G = ki6.getGroup(op.param1)
                  G = ki4.getGroup(op.param1)
                  ki3.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki3.updateGroup(G)
                  ticket = ki3.reissueGroupTicket(op.param1)
                  ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki5.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
			                  
            if op.param3 in ki6MID:
              if op.param2 not in Family:
                try:
                  G = ki2.getGroup(op.param1)
                  G = ki5.getGroup(op.param1)
                  ki4.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki4.updateGroup(G)
                  ticket = ki4.reissueGroupTicket(op.param1)
                  ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki6.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                  
            if op.param3 in ki7MID:
              if op.param2 not in Family:
                try:
                  G = ki2.getGroup(op.param1)
                  G = ki4.getGroup(op.param1)
                  ki1.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki1.updateGroup(G)
                  ticket = ki1.reissueGroupTicket(op.param1)
                  ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki7.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                  
            if op.param3 in ki8MID:
              if op.param2 not in Family:
                try:
                  G = ki9.getGroup(op.param1)
                  G = ki10.getGroup(op.param1)
                  ki5.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki5.updateGroup(G)
                  ticket = ki5.reissueGroupTicket(op.param1)
                  ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki8.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                  
            if op.param3 in ki9MID:
              if op.param2 not in Family:
                try:
                  G = ki8.getGroup(op.param1)
                  G = ki9.getGroup(op.param1)
                  ki7.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki7.updateGroup(G)
                  ticket = ki7.reissueGroupTicket(op.param1)
                  ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki9.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                  
            if op.param3 in ki10MID:
              if op.param2 not in Family:
                try:
                  G = ki1.getGroup(op.param1)
                  G = ki4.getGroup(op.param1)
                  ki2.kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  ki2.updateGroup(G)
                  ticket = ki2.reissueGroupTicket(op.param1)
                  ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  ki10.updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                except:
                  G = random.choice(Rfu).getGroup(op.param1) 
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                  G.preventedJoinByTicket = False
                  random.choice(Rfu).updateGroup(G)
                  ticket = random.choice(Rfu).reissueGroupTicket(op.param1)
                  ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                  time.sleep(0.01)
                  G.preventedJoinByTicket = True
                  random.choice(Rfu).updateGroup(G)
                  settings["blacklist"][op.param2] = True
                  f=codecs.open('st2__b.json','w','utf-8')
                  json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)

        if op.type == 19:
            if lineMID in op.param3:
                settings["blacklist"][op.param2] = True
        if op.type == 22:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)
                ki1.leaveRoom(op.param1)
                ki2.leaveRoom(op.param1)
                ki3.leaveRoom(op.param1)
                ki4.leaveRoom(op.param1)
                ki5.leaveRoom(op.param1)
                ki6.leaveRoom(op.param1)
                ki7.leaveRoom(op.param1)
                ki8.leaveRoom(op.param1)
                ki9.leaveRoom(op.param1)
                ki10.leaveRoom(op.param1)
        if op.type == 24:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)
                ki1.leaveRoom(op.param1)
                ki2.leaveRoom(op.param1)
                ki3.leaveRoom(op.param1)
                ki4.leaveRoom(op.param1)
                ki5.leaveRoom(op.param1)
                ki6.leaveRoom(op.param1)
                ki7.leaveRoom(op.param1)
                ki8.leaveRoom(op.param1)
                ki9.leaveRoom(op.param1)
                ki10.leaveRoom(op.param1)

        if op.type == 25:
            msg = op.message
            if msg.contentType == 13:
                if settings["contact"] == True:
                    #msg.contentType = 0
                   if 'displayName' in msg.contentMetadata:
                       contact = line.getContact(msg.contentMetadata["mid"])
                       try:
                           cu = line.getProfileCoverURL(msg.contentMetadata["mid"])
                       except:
                           cu = ""
                       line.sendMessage(msg.to,"[‡∏ä‡∏∑‡πà‡∏≠]:\n" + msg.contentMetadata["displayName"] + "\n[mid]:\n" + msg.contentMetadata["mid"] + "\n[‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö]:\n" + contact.statusMessage + "\n[‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå]:\nhttp://dl.profile.line-cdn.net/" + contact.pictureStatus + "\n[‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏Å]:\n" + str(cu))
                   else:
                       contact = line.getContact(msg.contentMetadata["mid"])
                       try:
                           cu = line.getProfileCoverURL(msg.contentMetadata["mid"])
                       except:
                           cu = ""
                       line.sendMessage(msg.to,"[‡∏ä‡∏∑‡πà‡∏≠]:\n" + contact.displayName + "\n[mid]:\n" + msg.contentMetadata["mid"] + "\n[‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö]:\n" + contact.statusMessage + "\n[‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå]:\nhttp://dl.profile.line-cdn.net/" + contact.pictureStatus + "\n[‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏Å]:\n" + str(cu))

#==============================================================================#
        if op.type == 25:
            msg = op.message
            if msg.contentType == 13:
                if settings["wblack"] == True:
                    if msg.contentMetadata["mid"] in settings["commentBlack"]:
                        line.sendMessage(msg.to,"sudah masuk daftar hitam")
                        settings["wblack"] = False
                    else:
                        settings["commentBlack"][msg.contentMetadata["mid"]] = True
                        settings["wblack"] = False
                        line.sendMessage(msg.to,"Itu tidak berkomentar")
                elif settings["dblack"] == True:
                    if msg.contentMetadata["mid"] in settings["commentBlack"]:
                        del settings["commentBlack"][msg.contentMetadata["mid"]]
                        line.sendMessage(msg.to,"Done")
                        settings["dblack"] = False
                    else:
                        settings["dblack"] = False
                        line.sendMessage(msg.to,"Tidak ada dalam daftar hitam")
#-------------------------------------------------------------------------------
                elif settings["wblacklist"] == True:
                    if msg.contentMetadata["mid"] in settings["blacklist"]:
                        line.sendMessage(msg.to,"sudah masuk daftar hitam")
                        settings["wblacklist"] = False
                    else:
                        settings["blacklist"][msg.contentMetadata["mid"]] = True
                        settings["wblacklist"] = False
                        line.sendMessage(msg.to,"Done")
                        
                elif settings["dblacklist"] == True:
                    if msg.contentMetadata["mid"] in settings["blacklist"]:
                        del settings["blacklist"][msg.contentMetadata["mid"]]
                        line.sendMessage(msg.to,"Done")
                        settings["dblacklist"] = False
                    else:
                        settings["dblacklist"] = False
                        line.sendMessage(msg.to,"Done")
                        
                       
#-------------------------------------------------------------------------------
        if op.type == 19:
            try:
                if op.param3 in lineMID:
                    if op.param2 in ki10MID:
                        G = ki10.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki10.updateGroup(G)
                        ticket = ki10.reissueGroupTicket(op.param1)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        G.preventedJoinByTicket = True
                        ki10.updateGroup(G)
                    else:
                        G = ki10.getGroup(op.param1)                                                
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki10.updateGroup(G)
                        ticket = ki10.reissueGroupTicket(op.param1)	
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        G.preventedJoinByTicket = True
                        ki10.updateGroup(G)
                        settings["blacklist"][op.param2] = True                       

                elif op.param3 in ki1MID:
                    if op.param2 in lineMID:
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                    else:
                        G = line.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)				
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki2MID:
                    if op.param2 in ki1MID:
                        G = ki1.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki1.updateGroup(G)
                        ticket = ki1.reissueGroupTicket(op.param1)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        G.preventedJoinByTicket = True
                        ki1.updateGroup(G)
                    else:
                        G = ki1.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki1.updateGroup(G)
                        ticket = ki1.reissueGroupTicket(op.param1)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        G.preventedJoinByTicket = True
                        ki1.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki3MID:
                    if op.param2 in ki2MID:
                        G = ki2.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki2.updateGroup(G)
                        ticket = ki2.reissueGroupTicket(op.param1)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        G.preventedJoinByTicket = True
                        ki2.updateGroup(G)
                    else:
                        G = ki2.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki2.updateGroup(G)
                        ticket = ki2.reissueGroupTicket(op.param1)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)					
                        G.preventedJoinByTicket = True
                        ki2.updateGroup(G)
                        settings["blacklist"][op.param2] = True
			
                elif op.param3 in ki4MID:
                    if op.param2 in ki3MID:
                        G = ki3.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki3.updateGroup(G)
                        ticket = ki3.reissueGroupTicket(op.param1)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        G.preventedJoinByTicket = True
                        ki3.updateGroup(G)
                    else:
                        G = ki3.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki3.updateGroup(G)
                        ticket = ki3.reissueGroupTicket(op.param1)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        G.preventedJoinByTicket = True
                        ki3.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki5MID:
                    if op.param2 in ki4MID:
                        G = ki4.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki4.updateGroup(G)
                        ticket = ki4.reissueGroupTicket(op.param1)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)				
                        G.preventedJoinByTicket = True
                        ki4.updateGroup(G)
                    else:
                        G = ki4.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki4.updateGroup(G)
                        ticket = ki4.reissueGroupTicket(op.param1)
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)					
                        G.preventedJoinByTicket = True
                        ki4.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki6MID:
                    if op.param2 in ki5MID:
                        G = k5.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki5.updateGroup(G)
                        ticket = ki5.reissueGroupTicket(op.param1)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)					
                        G.preventedJoinByTicket = True
                        ki5.updateGroup(G)
                    else:
                        G = ki5.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki5.updateGroup(G)
                        ticket = ki5.reissueGroupTicket(op.param1)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)			
                        G.preventedJoinByTicket = True
                        ki5.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki7MID:
                    if op.param2 in ki6MID:
                        G = ki6.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki6.updateGroup(G)
                        ticket = k6.reissueGroupTicket(op.param1)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)					
                        G.preventedJoinByTicket = True
                        ki6.updateGroup(G)
                    else:
                        G = ki6.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki6.updateGroup(G)
                        ticket = ki6.reissueGroupTicket(op.param1)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)				
                        G.preventedJoinByTicket = True
                        ki6.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki8MID:
                    if op.param2 in ki7MID:
                        G = ki7.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki7.updateGroup(G)
                        ticket = ki7.reissueGroupTicket(op.param1)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)				
                        G.preventedJoinByTicket = True
                        ki7.updateGroup(G)
                    else:
                        G = ki7.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki7.updateGroup(G)
                        ticket = ki7.reissueGroupTicket(op.param1)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)					
                        G.preventedJoinByTicket = True
                        ki7.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki9MID:
                    if op.param2 in ki8MID:        
                        G = ki8.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki8.updateGroup(G)
                        ticket = ki8.reissueGroupTicket(op.param1)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)				
                        G.preventedJoinByTicket = True
                        ki8.updateGroup(G)
                    else:
                        G = ki8.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki8.updateGroup(G)
                        ticket = ki8.reissueGroupTicket(op.param1)
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)					
                        G.preventedJoinByTicket = True
                        ki8.updateGroup(G)
                        settings["blacklist"][op.param2] = True

                elif op.param3 in ki10MID:
                    if op.param2 in ki9MID:
                        G = ki9.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki9.updateGroup(G)
                        ticket = ki9.reissueGroupTicket(op.param1)
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)				
                        G.preventedJoinByTicket = True
                        ki9.updateGroup(G)
                    else:
                        G = ki9.getGroup(op.param1)
                        random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki9.updateGroup(G)
                        ticket = ki9.reissueGroupTicket(op.param1)
                        ki9.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        line.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki1.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki2.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki3.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki4.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki5.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki6.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki7.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)	
                        ki8.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)
                        ki10.acceptGroupInvitationByTicket(op.param1,format(str(ticket)))
                        time.sleep(0.0001)					
                        G.preventedJoinByTicket = True
                        ki9.updateGroup(G)
                        settings["blacklist"][op.param2] = True
            except:
                pass
#==============================================================================#
        if op.type == 19:
            if lineMID in op.param3:
                settings["blacklist"][op.param2] = True
        if op.type == 22:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)              
        if op.type == 24:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)      
#====================================================================================

            elif msg.contentType == 1:
                    if settings["changePictureProfile"] == True:
                        path = line.downloadObjectMsg(msg_id)
                        settings["changePictureProfile"] = False                                                                               
                        line.updateProfilePicture(path)                                                                                        
                        line.sendMessage(to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
                    if msg.toType == 2:
                        if to in settings["changeGroupPicture"]:
                            path = line.downloadObjectMsg(msg_id)
                            settings["changeGroupPicture"].remove(to)
                            line.updateGroupPicture(to, path)
                            line.sendMessage(to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
            elif msg.contentType == 7:
                if settings["checkSticker"] == True:
                    stk_id = msg.contentMetadata['STKID']
                    stk_ver = msg.contentMetadata['STKVER']
                    pkg_id = msg.contentMetadata['STKPKGID']
                    ret_ = "‚ïî‚ïê‚ïê[ Sticker Info ]"
                    ret_ += "\n‚ï† STICKER ID : {}".format(stk_id)
                    ret_ += "\n‚ï† STICKER PACKAGES ID : {}".format(pkg_id)
                    ret_ += "\n‚ï† STICKER VERSION : {}".format(stk_ver)
                    ret_ += "\n‚ï† STICKER URL : line://shop/detail/{}".format(pkg_id)
                    ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    line.sendMessage(to, str(ret_))
            elif msg.contentType == 16:
                if settings["timeline"] == True:
                    msg.contentType = 0
                    msg.text = "‡∏•‡∏¥‡πâ‡∏á‡πÇ‡∏û‡∏™\n" + msg.contentMetadata["postEndUrl"]
                    line.sendMessage(msg.to,msg.text)              
#==============================================================================#
        if op.type == 17:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
            if RfuProtect["protect"] == True:
                if settings["blacklist"][op.param2] == True:
                    try:
                        line.kickoutFromGroup(op.param1,[op.param2])
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                    except:
                        try:
                            line.kickoutFromGroup(op.param1,[op.param2])
                            G = line.getGroup(op.param1)
                            G.preventedJoinByTicket = True
                            line.updateGroup(G)
                        except:
                            pass
        if op.type == 19:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["protect"] == True:
                    settings ["blacklist"][op.param2] = True
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                    random.choice(Rfu).inviteIntoGroup(op.param1,[op.param2])

        if op.type == 13:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["inviteprotect"] == True:
                    settings ["blacklist"][op.param2] = True
                    random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                    if op.param2 not in Family:
                        if op.param2 in Family:
                            pass
                        elif RfuProtect["inviteprotect"] == True:
                            settings ["blacklist"][op.param2] = True
                            random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                            random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                            if op.param2 not in Family:
                                if op.param2 in Family:
                                    pass
                                elif RfuProtect["cancelprotect"] == True:
                                    settings ["blacklist"][op.param2] = True
                                    random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])

        if op.type == 11:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["linkprotect"] == True:
                    settings ["blacklist"][op.param2] = True
                    G = line.getGroup(op.param1)
                    G.preventedJoinByTicket = True
                    line.updateGroup(G)
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
        if op.type == 5:
            if RfuProtect["autoAdd"] == True:
                if (settings["message"] in [""," ","\n",None]):
                    pass
                else:
                    line.sendMessage(op.param1,str(settings["message"]))
                    ki1.sendMessage(op.param1,str(settings["message"]))
                    ki2.sendMessage(op.param1,str(settings["message"]))
                    ki3.sendMessage(op.param1,str(settings["message"]))
                    ki4.sendMessage(op.param1,str(settings["message"])) 
                    ki5.sendMessage(op.param1,str(settings["message"]))
                    ki6.sendMessage(op.param1,str(settings["message"]))
                    ki7.sendMessage(op.param1,str(settings["message"]))
                    ki8.sendMessage(op.param1,str(settings["message"])) 
                    ki9.sendMessage(op.param1,str(settings["message"]))
                    ki10.sendMessage(op.param1,str(settings["message"]))

        if op.type == 11:
            if RfuProtect["linkprotect"] == True:
                if op.param2 not in Family:
                    G = line.getGroup(op.param1)
                    G.preventedJoinByTicket = True
                    random.choice(Rfu).updateGroup(G)
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param3])                    

        if op.type == 13:
           if RfuProtect["Protectguest"] == True:
               if op.param2 not in Family:
                  random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])

        if op.type == 17:
           if RfuProtect["Protectjoin"] == True:
               if op.param2 not in Family:
                   random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])

        if op.type == 1:
            if sender in Setmain["foto"]:
                path = line.downloadObjectMsg(msg_id)
                del Setmain["foto"][sender]
                line.updateProfilePicture(path)
                line.sendMessage(to,"Foto berhasil dirubah")

        if op.type == 26:
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0:
                if sender != line.profile.mid:
                    to = sender
                else:
                    to = receiver
            else:
                to = receiver
                if settings["autoRead"] == True:
                    line.sendChatChecked(to, msg_id)
                    ki1.sendChatChecked(to, msg_id)
                    ki2.sendChatChecked(to, msg_id)
                    ki3.sendChatChecked(to, msg_id)
                    ki4.sendChatChecked(to, msg_id)
                    ki5.sendChatChecked(to, msg_id)
                    ki6.sendChatChecked(to, msg_id)
                    ki7.sendChatChecked(to, msg_id)
                    ki8.sendChatChecked(to, msg_id)
                    ki9.sendChatChecked(to, msg_id)
                    ki10.sendChatChecked(to, msg_id)    
                if to in read["readPoint"]:
                    if sender not in read["ROM"][to]:
                        read["ROM"][to][sender] = True
                if sender in settings["mimic"]["target"] and settings["mimic"]["status"] == True and settings["mimic"]["target"][sender] == True:
                    text = msg.text
                    if text is not None:
                        line.sendMessage(msg.to,text)                        
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys())!= None:
                         if settings['potoMention'] == True:
                             contact = line.getContact(msg._from)
                             cName = contact.pictureStatus
                             balas = ["http://dl.profile.line-cdn.net/" + cName]
                             ret_ = random.choice(balas)
                             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                             mentionees = mention["MENTIONEES"]
                             for mention in mentionees:
                                   if mention["M"] in lineMID:
                                          line.sendImageWithURL(to,ret_)
                                          break  
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys()) != None:
                         if settings['detectMention'] == True:
                             contact = line.getContact(msg._from)
                             cName = contact.displayName
                            # balas = ["„Äé Auto Respon„Äè\n " + cName + "\n" + str(settings["tag1"])
                             balas = ["„Äé Auto Respon„Äè\n " + cName + "\n" + str(settings["tag1"]) , "„Äé Auto Respon„Äè\n" + cName + "\n" + str(settings["tag2"])]
                            # ret_ = msg.text1 + random.choice(balas)
                             ret_ = "" + random.choice(balas)
                             name = re.findall(r'@(\w+)', msg.text)
                             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                             mentionees = mention['MENTIONEES']
                             for mention in mentionees:
                                   if mention['M'] in lineMID:
                                          line.sendMessage(to,ret_)                                                                         
                                          break                        
                                 #         sendMessageWithMention(to, contact.mid)
                                      #    break
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys()) != None:
                         if settings['detectMention'] == True:
                            contact = line.getContact(msg._from)
                            cName = contact.displayName
                            balas = ["Dont Tag Me!! Im Buy",cName + ""]
                            ret_ = "@" + random.choice(balas)
                            name = re.findall(r'@(\w+)', msg.text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            for mention in mentionees:
                                  if mention['M'] in lineMID:
                                         line.sendMessage(msg.to,ret_)                                         
                                         break                                          
                if msg.text in ["Me","me",".me",".Me","‡∏Ñ‡∏ó","/me"]:
                    line.sendMessage(msg.to,"‡πÄ‡∏ä‡∏Ñ‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡πÑ‡∏≠‡πâ‡∏™‡∏±‡∏™ ‡πÑ‡∏°‡πà‡∏´‡∏•‡∏∏‡∏î‡∏´‡∏£‡∏≠‡∏Å ‡∏à‡∏ß‡∏¢ üòÜ")
                if msg.text in ["sp","speed",".speed","/speed","Sp",".Speed"]:
                    line.sendMessage(msg.to,"‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏ß‡∏¢‡∏£‡∏±‡∏¢‡∏´‡∏ô‡∏±‡∏Å‡∏´‡∏£‡∏≤ ‡∏™‡∏∂‡∏î !!!üòâ")
                if msg.text in ["runtime","Runtime","/uptime","‡∏≠‡∏≠‡∏ô",".uptime"]:
                    line.sendMessage(msg.to,"‡∏≠‡∏≠‡∏ô ‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏≤ ‡∏•‡∏π‡∏Å")	
                if msg.text in ["@","‡πÅ‡∏≠‡∏î","‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô","‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡πâ‡∏ô","‡∏´‡∏±‡∏ß‡∏´‡πâ‡∏≠‡∏á"]:
                    line.sendMessage(msg.to,"üëá‡∏ô‡∏µ‡πâ‡πÑ‡∏á‡πÅ‡∏≠‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°üëá")
                    line.sendMessage(msg.to,"Siriv10:„Ç∞„É´‰ΩúÊàêËÄÖ")				
                if msg.text in ["@‡∏£‡∏≠‡∏á","‡πÅ‡∏≠‡∏î‡∏£‡∏≠‡∏á","‡πÅ‡∏≠‡∏î‡∏™‡∏≥‡∏£‡∏≠‡∏á","‡∏£‡∏≠‡∏á","‡∏£‡∏≠‡∏á‡πÅ‡∏≠‡∏î","@@"]:
                    line.sendMessage(msg.to,"siri:‰∫àÂÇô‰ΩúÊàêËÄÖ")
                    line.sendMessage(msg.to,"‡∏Ç‡∏¥‡πÄ‡∏´‡∏•‡πà‡∏à‡∏±‡∏á ‡πÅ‡∏≠‡∏î ‡∏£‡∏≠‡∏á ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡πà‡∏∞üòÇ")				
                if msg.text in ["‡∏û‡∏µ‡πà‡∏ä‡∏¥","‡∏ä‡∏¥","‡∏û‡∏µ‡πà","‡∏û‡∏µ‡πà‡∏™‡∏∏","‡∏™‡∏∏","‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å"]:
                    line.sendMessage(msg.to,"‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏≥‡πÑ‡∏°‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏î‡∏∞‡∏ï‡∏µ‡∏´‡∏±‡∏ß ‡∏•‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡πà‡∏≤‡πÄ‡∏•‡∏¢")
                    line.sendMessage(msg.to,"‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á.‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞")				
                if msg.text in ["‡∏™‡∏ß‡∏±‡∏î‡∏î‡∏µ","‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ","‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö","‡∏™‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö","‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö","‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏±‡∏ö","‡∏™‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡∏±‡∏ö","‡∏î‡∏µ‡∏Ñ‡πà‡∏∞","‡∏î‡∏µ‡∏Ñ‡∏±‡∏ö"]:
                    line.sendMessage(msg.to,"‡πÑ‡∏´‡∏ß‡πâ‡∏û‡∏£‡∏∞‡πÄ‡∏ñ‡∏≠‡∏∞‡∏•‡∏π‡∏Å...YESüòÇ")
                    line.sendMessage(msg.to,"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å ‡∏Ñ‡πà‡∏∞üòä")				
                if msg.text in ["5","55","555","5555","55555","555555","5555555"]:
                    line.sendMessage(msg.to,"‡∏Ç‡∏£‡∏£‡∏° ‡πÑ‡∏£ ‡∏Ñ‡πà‡∏∞")
                    line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏ï‡∏•‡∏Å...")				
                if msg.text in ["‡∏Å‡∏≥","‡∏Å‡∏≥‡∏ô‡∏∞","‡∏Å‡∏≥‡∏´‡∏≥","‡∏Å‡∏≥‡∏´‡∏≠‡∏¢"]:
                    line.sendMessage(msg.to,"‡πÑ‡∏™‡πÑ‡∏™..")
                    line.sendMessage(msg.to,"‡∏´‡∏≥‡∏¢‡∏π‡πà‡∏ß‡∏ß..‡πÉ‡∏™‡∏°‡∏≤‡∏Å‡∏≥‡πÄ‡∏ö‡∏¥‡πà‡∏á‡∏î‡∏∏(‚ó°‚Äø‚ó°‚úø)  ")				
                if msg.text in ["‡∏°‡∏≠‡∏á","‡∏°‡∏≠‡∏á‡πÅ‡∏£‡∏á","‡∏°‡∏≠‡∏á‡∏ö‡∏ô",".‡∏°‡∏≠‡∏á"]:
                    line.sendMessage(msg.to,"‡∏°‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£ ‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏ó‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏ö‡∏≠‡∏î‡πÄ‡∏•‡∏¢")
                    line.sendMessage(msg.to,"‡∏°‡∏≠‡∏á‡∏´‡∏≥..(‚ó°‚Äø‚ó°‚úø) ")				         
                if msg.text in dangerMessage:
                    random.choice(Rfu).kickoutFromGroup(receiver,[sender])
                    random.choice(Rfu).sendMessage(msg.to,"‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏¢ ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")										
# ----------------- NOTIFED MEMBER JOIN GROUP
        if op.type == 17:
          if settings["Wc"] == True:
            if op.param2 in bot1:
                return
            dan = line.getContact(op.param2)
            tgb = line.getGroup(op.param1)
            line.sendMessage(op.param1,str(settings["KIEBOT1"]) + "\n\n" + line.getContact(op.param2).displayName)
          #  line.sendMessage(op.param1, "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {}, Welcome to Group {}\n‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÅ‡∏£‡πâ‡∏ß‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡∏ô‡∏∞‡∏°‡πà‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏∏‡πÄ‡∏ï‡∏∞‡∏ô‡∏∞ (ÔΩÄ„Éªœâ„Éª¬¥)".format(str(dan.displayName),str(tgb.name)))
            line.sendContact(op.param1, op.param2)
            line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
# ----------------- NOTIFED MEMBER OUT GROUP
        if op.type == 15:
          if settings['Lv'] == True:
            if op.param2 in bot1:
                return
            dan = line.getContact(op.param2)
            tgb = line.getGroup(op.param1)
            line.sendMessage(op.param1,str(settings["KIEBOT2"]) + "\n\n" + line.getContact(op.param2).displayName)
       #     line.sendMessage(op.param1, "‡πÄ‡∏≠‡πâ‡∏≤ {}, ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏° {} \n‡∏¢‡∏∑‡∏ô‡πÑ‡∏ß‡πâ‡∏≠‡∏≤‡∏•‡∏±‡∏¢‡πÅ‡∏î‡πà‡πÄ‡∏Ç‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤3‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ  (ÔΩÄ„Éªœâ„Éª¬¥)".format(str(dan.displayName),str(tgb.name)))
            line.sendContact(op.param1, op.param2)
            line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
# ----------------- NOTIFED MEMBER JOIN GROUP
        if op.type == 19:
           print ("MEMBER KICKOUT TO GROUP")
           if settings["Nk"] == True:
             if op.param2 in lineMID:
                 return
             dan = line.getContact(op.param2)
             tgb = line.getGroup(op.param1)
             line.sendMessage(op.param1,str(settings["kick"]) + "\n‡πÄ‡∏Æ‡πâ‡∏¢ {}, ‡∏Ñ‡∏∑‡∏≠‡∏´‡∏¢‡∏±‡∏á‡∏°‡∏±‡∏ô‡πÇ‡∏´‡∏î‡πÅ‡∏ó‡πâ‡∏ß‡∏∞Œ£(„Å£Ôæü–îÔæüÔºõ)„Å£ ".format(str(dan.displayName)))
             line.sendContact(op.param1, op.param2)
             line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
#~~~~~~~~~~~~~~~~~‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡πÅ‡∏°‡∏ß‡∏ô‡∏∏~~~~~~~~~~~~~~~~~~~~~~~#
        if op.type == 55:
            try:
                if RfuCctv['cyduk'][op.param1]==True:
                    if op.param1 in RfuCctv['point']:
                        Name = line.getContact(op.param2).displayName
                        if Name in RfuCctv['sidermem'][op.param1]:
                            pass
                        else:
                            RfuCctv['sidermem'][op.param1] += "\nüî∞" + Name
                            pref=['‡∏≠‡∏¢‡πà‡∏≤‡πÅ‡∏≠‡∏ö‡∏Å‡∏±‡∏ô‡∏™‡∏¥','‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏ñ‡∏≠‡∏∞']
                            line.sendMessage(op.param1, str(random.choice(pref))+' '+Name)
                    else:
                        pass
                else:
                    pass
            except:
                pass

        if op.type == 55:
            try:
                if RfuCctv['cyduk'][op.param1]==True:
                    if op.param1 in RfuCctv['point']:
                        Name = line.getContact(op.param2).displayName
                        if Name in RfuCctv['sidermem'][op.param1]:
                            pass
                        else:
                            RfuCctv['sidermem'][op.param1] += "\n‚å¨ " + Name + "\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ"
                            if " " in Name:
                            	nick = Name.split(' ')
                            if len(nick) == 2:
                            	line.sendMessage(op.param1, "Nah " +nick[0])
                            summon(op.param1, [op.param2])
                    else:
                        pass
                else:
                    pass
            except:
                pass
        if op.type == 55:
            print ("[ 55 ] (‚ó°‚Äø‚ó°‚úø) ")
            try:
                if op.param1 in read['readPoint']:
                    if op.param2 in read['readMember'][op.param1]:
                        pass
                    else:
                        read['readMember'][op.param1] += op.param2
                    read['ROM'][op.param1][op.param2] = op.param2
                    backupData()
                else:
                   pass
            except:
                pass
    except Exception as error:
        logError(error)
#==============================================================================#
while True:
    try:
        ops = oepoll.singleTrace(count=50)
        if ops is not None:
            for op in ops:
                lineBot(op)
                oepoll.setRevision(op.revision)
    except Exception as e:
        logError(e)
